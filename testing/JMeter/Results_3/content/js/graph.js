/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 73.0, "minX": 0.0, "maxY": 16314.0, "series": [{"data": [[0.0, 127.0], [0.1, 127.0], [0.2, 130.0], [0.3, 130.0], [0.4, 131.0], [0.5, 131.0], [0.6, 131.0], [0.7, 132.0], [0.8, 139.0], [0.9, 139.0], [1.0, 142.0], [1.1, 142.0], [1.2, 147.0], [1.3, 147.0], [1.4, 150.0], [1.5, 150.0], [1.6, 151.0], [1.7, 151.0], [1.8, 155.0], [1.9, 155.0], [2.0, 155.0], [2.1, 155.0], [2.2, 158.0], [2.3, 158.0], [2.4, 289.0], [2.5, 289.0], [2.6, 295.0], [2.7, 295.0], [2.8, 295.0], [2.9, 296.0], [3.0, 296.0], [3.1, 296.0], [3.2, 302.0], [3.3, 302.0], [3.4, 302.0], [3.5, 302.0], [3.6, 305.0], [3.7, 305.0], [3.8, 305.0], [3.9, 308.0], [4.0, 310.0], [4.1, 310.0], [4.2, 333.0], [4.3, 333.0], [4.4, 401.0], [4.5, 401.0], [4.6, 401.0], [4.7, 403.0], [4.8, 403.0], [4.9, 406.0], [5.0, 406.0], [5.1, 416.0], [5.2, 416.0], [5.3, 418.0], [5.4, 418.0], [5.5, 422.0], [5.6, 422.0], [5.7, 456.0], [5.8, 456.0], [5.9, 456.0], [6.0, 456.0], [6.1, 457.0], [6.2, 457.0], [6.3, 460.0], [6.4, 460.0], [6.5, 464.0], [6.6, 464.0], [6.7, 472.0], [6.8, 472.0], [6.9, 475.0], [7.0, 475.0], [7.1, 475.0], [7.2, 475.0], [7.3, 475.0], [7.4, 475.0], [7.5, 476.0], [7.6, 476.0], [7.7, 477.0], [7.8, 477.0], [7.9, 481.0], [8.0, 481.0], [8.1, 486.0], [8.2, 486.0], [8.3, 488.0], [8.4, 488.0], [8.5, 488.0], [8.6, 488.0], [8.7, 488.0], [8.8, 489.0], [8.9, 489.0], [9.0, 490.0], [9.1, 490.0], [9.2, 497.0], [9.3, 497.0], [9.4, 497.0], [9.5, 497.0], [9.6, 504.0], [9.7, 504.0], [9.8, 536.0], [9.9, 536.0], [10.0, 539.0], [10.1, 539.0], [10.2, 545.0], [10.3, 545.0], [10.4, 545.0], [10.5, 545.0], [10.6, 546.0], [10.7, 546.0], [10.8, 552.0], [10.9, 552.0], [11.0, 558.0], [11.1, 558.0], [11.2, 558.0], [11.3, 558.0], [11.4, 560.0], [11.5, 560.0], [11.6, 563.0], [11.7, 563.0], [11.8, 571.0], [11.9, 571.0], [12.0, 576.0], [12.1, 576.0], [12.2, 577.0], [12.3, 577.0], [12.4, 578.0], [12.5, 578.0], [12.6, 595.0], [12.7, 595.0], [12.8, 600.0], [12.9, 600.0], [13.0, 600.0], [13.1, 600.0], [13.2, 603.0], [13.3, 603.0], [13.4, 605.0], [13.5, 605.0], [13.6, 607.0], [13.7, 607.0], [13.8, 614.0], [13.9, 614.0], [14.0, 615.0], [14.1, 615.0], [14.2, 620.0], [14.3, 620.0], [14.4, 628.0], [14.5, 628.0], [14.6, 635.0], [14.7, 635.0], [14.8, 644.0], [14.9, 644.0], [15.0, 645.0], [15.1, 645.0], [15.2, 647.0], [15.3, 647.0], [15.4, 650.0], [15.5, 650.0], [15.6, 659.0], [15.7, 659.0], [15.8, 664.0], [15.9, 664.0], [16.0, 676.0], [16.1, 676.0], [16.2, 685.0], [16.3, 685.0], [16.4, 696.0], [16.5, 696.0], [16.6, 708.0], [16.7, 708.0], [16.8, 724.0], [16.9, 724.0], [17.0, 727.0], [17.1, 727.0], [17.2, 912.0], [17.3, 912.0], [17.4, 973.0], [17.5, 973.0], [17.6, 1092.0], [17.7, 1092.0], [17.8, 1142.0], [17.9, 1142.0], [18.0, 1148.0], [18.1, 1148.0], [18.2, 1157.0], [18.3, 1157.0], [18.4, 1160.0], [18.5, 1160.0], [18.6, 1188.0], [18.7, 1188.0], [18.8, 1198.0], [18.9, 1198.0], [19.0, 1208.0], [19.1, 1208.0], [19.2, 1236.0], [19.3, 1236.0], [19.4, 1250.0], [19.5, 1250.0], [19.6, 1264.0], [19.7, 1264.0], [19.8, 1294.0], [19.9, 1294.0], [20.0, 1302.0], [20.1, 1302.0], [20.2, 1309.0], [20.3, 1309.0], [20.4, 1312.0], [20.5, 1312.0], [20.6, 1321.0], [20.7, 1321.0], [20.8, 1457.0], [20.9, 1457.0], [21.0, 1468.0], [21.1, 1468.0], [21.2, 1471.0], [21.3, 1471.0], [21.4, 1472.0], [21.5, 1472.0], [21.6, 1472.0], [21.7, 1472.0], [21.8, 1537.0], [21.9, 1537.0], [22.0, 1537.0], [22.1, 1537.0], [22.2, 1540.0], [22.3, 1540.0], [22.4, 1545.0], [22.5, 1545.0], [22.6, 1567.0], [22.7, 1567.0], [22.8, 1579.0], [22.9, 1579.0], [23.0, 1589.0], [23.1, 1589.0], [23.2, 1725.0], [23.3, 1725.0], [23.4, 1743.0], [23.5, 1743.0], [23.6, 1744.0], [23.7, 1744.0], [23.8, 1753.0], [23.9, 1753.0], [24.0, 1776.0], [24.1, 1776.0], [24.2, 1795.0], [24.3, 1795.0], [24.4, 1855.0], [24.5, 1855.0], [24.6, 1898.0], [24.7, 1898.0], [24.8, 1907.0], [24.9, 1907.0], [25.0, 1958.0], [25.1, 1958.0], [25.2, 1989.0], [25.3, 1989.0], [25.4, 1995.0], [25.5, 1995.0], [25.6, 2010.0], [25.7, 2010.0], [25.8, 2058.0], [25.9, 2058.0], [26.0, 2114.0], [26.1, 2114.0], [26.2, 2323.0], [26.3, 2323.0], [26.4, 2329.0], [26.5, 2329.0], [26.6, 2512.0], [26.7, 2512.0], [26.8, 2610.0], [26.9, 2610.0], [27.0, 2625.0], [27.1, 2625.0], [27.2, 2801.0], [27.3, 2801.0], [27.4, 2949.0], [27.5, 2949.0], [27.6, 3079.0], [27.7, 3079.0], [27.8, 3274.0], [27.9, 3274.0], [28.0, 3275.0], [28.1, 3275.0], [28.2, 3280.0], [28.3, 3280.0], [28.4, 3292.0], [28.5, 3292.0], [28.6, 3301.0], [28.7, 3301.0], [28.8, 3335.0], [28.9, 3335.0], [29.0, 3375.0], [29.1, 3375.0], [29.2, 3506.0], [29.3, 3506.0], [29.4, 3544.0], [29.5, 3544.0], [29.6, 3564.0], [29.7, 3564.0], [29.8, 3649.0], [29.9, 3649.0], [30.0, 3694.0], [30.1, 3694.0], [30.2, 3732.0], [30.3, 3732.0], [30.4, 3738.0], [30.5, 3738.0], [30.6, 3747.0], [30.7, 3747.0], [30.8, 3832.0], [30.9, 3832.0], [31.0, 3834.0], [31.1, 3834.0], [31.2, 3844.0], [31.3, 3844.0], [31.4, 3846.0], [31.5, 3846.0], [31.6, 3935.0], [31.7, 3935.0], [31.8, 3989.0], [31.9, 3989.0], [32.0, 4005.0], [32.1, 4005.0], [32.2, 4022.0], [32.3, 4022.0], [32.4, 4101.0], [32.5, 4101.0], [32.6, 4159.0], [32.7, 4159.0], [32.8, 4217.0], [32.9, 4217.0], [33.0, 4244.0], [33.1, 4244.0], [33.2, 4261.0], [33.3, 4261.0], [33.4, 4327.0], [33.5, 4327.0], [33.6, 4348.0], [33.7, 4348.0], [33.8, 4354.0], [33.9, 4354.0], [34.0, 4372.0], [34.1, 4372.0], [34.2, 4377.0], [34.3, 4377.0], [34.4, 4379.0], [34.5, 4379.0], [34.6, 4390.0], [34.7, 4390.0], [34.8, 4435.0], [34.9, 4435.0], [35.0, 4448.0], [35.1, 4448.0], [35.2, 4466.0], [35.3, 4466.0], [35.4, 4479.0], [35.5, 4479.0], [35.6, 4534.0], [35.7, 4534.0], [35.8, 4542.0], [35.9, 4542.0], [36.0, 4615.0], [36.1, 4615.0], [36.2, 4650.0], [36.3, 4650.0], [36.4, 4671.0], [36.5, 4671.0], [36.6, 4680.0], [36.7, 4680.0], [36.8, 4705.0], [36.9, 4705.0], [37.0, 4720.0], [37.1, 4720.0], [37.2, 4725.0], [37.3, 4725.0], [37.4, 4734.0], [37.5, 4734.0], [37.6, 4744.0], [37.7, 4744.0], [37.8, 4744.0], [37.9, 4794.0], [38.0, 4794.0], [38.1, 4812.0], [38.2, 4812.0], [38.3, 4827.0], [38.4, 4827.0], [38.5, 4867.0], [38.6, 4867.0], [38.7, 4871.0], [38.8, 4871.0], [38.9, 4892.0], [39.0, 4892.0], [39.1, 4895.0], [39.2, 4895.0], [39.3, 4908.0], [39.4, 4908.0], [39.5, 4910.0], [39.6, 4910.0], [39.7, 4914.0], [39.8, 4914.0], [39.9, 4917.0], [40.0, 4917.0], [40.1, 4939.0], [40.2, 4939.0], [40.3, 4942.0], [40.4, 4942.0], [40.5, 4944.0], [40.6, 4944.0], [40.7, 4954.0], [40.8, 4954.0], [40.9, 4955.0], [41.0, 4955.0], [41.1, 4958.0], [41.2, 4958.0], [41.3, 4964.0], [41.4, 4964.0], [41.5, 4965.0], [41.6, 4965.0], [41.7, 4989.0], [41.8, 4989.0], [41.9, 5002.0], [42.0, 5002.0], [42.1, 5010.0], [42.2, 5010.0], [42.3, 5021.0], [42.4, 5021.0], [42.5, 5022.0], [42.6, 5022.0], [42.7, 5040.0], [42.8, 5040.0], [42.9, 5041.0], [43.0, 5041.0], [43.1, 5073.0], [43.2, 5073.0], [43.3, 5087.0], [43.4, 5087.0], [43.5, 5091.0], [43.6, 5091.0], [43.7, 5103.0], [43.8, 5103.0], [43.9, 5106.0], [44.0, 5106.0], [44.1, 5154.0], [44.2, 5154.0], [44.3, 5155.0], [44.4, 5155.0], [44.5, 5253.0], [44.6, 5253.0], [44.7, 5267.0], [44.8, 5267.0], [44.9, 5287.0], [45.0, 5287.0], [45.1, 5294.0], [45.2, 5294.0], [45.3, 5378.0], [45.4, 5378.0], [45.5, 5456.0], [45.6, 5456.0], [45.7, 5622.0], [45.8, 5622.0], [45.9, 5691.0], [46.0, 5691.0], [46.1, 5693.0], [46.2, 5693.0], [46.3, 5885.0], [46.4, 5885.0], [46.5, 5886.0], [46.6, 5886.0], [46.7, 5899.0], [46.8, 5899.0], [46.9, 5941.0], [47.0, 5941.0], [47.1, 5953.0], [47.2, 5953.0], [47.3, 5974.0], [47.4, 5974.0], [47.5, 5975.0], [47.6, 5975.0], [47.7, 6016.0], [47.8, 6016.0], [47.9, 6067.0], [48.0, 6067.0], [48.1, 6110.0], [48.2, 6110.0], [48.3, 6120.0], [48.4, 6120.0], [48.5, 6123.0], [48.6, 6123.0], [48.7, 6150.0], [48.8, 6150.0], [48.9, 6237.0], [49.0, 6237.0], [49.1, 6250.0], [49.2, 6250.0], [49.3, 6520.0], [49.4, 6520.0], [49.5, 6556.0], [49.6, 6556.0], [49.7, 6563.0], [49.8, 6563.0], [49.9, 6573.0], [50.0, 6573.0], [50.1, 6585.0], [50.2, 6585.0], [50.3, 6613.0], [50.4, 6613.0], [50.5, 6628.0], [50.6, 6628.0], [50.7, 6645.0], [50.8, 6645.0], [50.9, 6681.0], [51.0, 6681.0], [51.1, 6698.0], [51.2, 6698.0], [51.3, 6706.0], [51.4, 6706.0], [51.5, 6707.0], [51.6, 6707.0], [51.7, 6710.0], [51.8, 6710.0], [51.9, 6727.0], [52.0, 6727.0], [52.1, 6736.0], [52.2, 6736.0], [52.3, 6757.0], [52.4, 6757.0], [52.5, 6799.0], [52.6, 6799.0], [52.7, 6835.0], [52.8, 6835.0], [52.9, 6869.0], [53.0, 6869.0], [53.1, 6882.0], [53.2, 6882.0], [53.3, 6945.0], [53.4, 6945.0], [53.5, 7052.0], [53.6, 7052.0], [53.7, 7091.0], [53.8, 7091.0], [53.9, 7148.0], [54.0, 7148.0], [54.1, 7172.0], [54.2, 7172.0], [54.3, 7180.0], [54.4, 7180.0], [54.5, 7186.0], [54.6, 7186.0], [54.7, 7187.0], [54.8, 7187.0], [54.9, 7203.0], [55.0, 7203.0], [55.1, 7209.0], [55.2, 7209.0], [55.3, 7301.0], [55.4, 7301.0], [55.5, 7329.0], [55.6, 7329.0], [55.7, 7338.0], [55.8, 7338.0], [55.9, 7338.0], [56.0, 7338.0], [56.1, 7342.0], [56.2, 7342.0], [56.3, 7368.0], [56.4, 7368.0], [56.5, 7377.0], [56.6, 7377.0], [56.7, 7382.0], [56.8, 7382.0], [56.9, 7404.0], [57.0, 7404.0], [57.1, 7453.0], [57.2, 7453.0], [57.3, 7461.0], [57.4, 7461.0], [57.5, 7481.0], [57.6, 7481.0], [57.7, 7498.0], [57.8, 7498.0], [57.9, 7651.0], [58.0, 7651.0], [58.1, 7677.0], [58.2, 7677.0], [58.3, 7697.0], [58.4, 7697.0], [58.5, 7719.0], [58.6, 7719.0], [58.7, 7720.0], [58.8, 7720.0], [58.9, 7744.0], [59.0, 7744.0], [59.1, 7748.0], [59.2, 7748.0], [59.3, 7766.0], [59.4, 7766.0], [59.5, 7786.0], [59.6, 7786.0], [59.7, 7861.0], [59.8, 7861.0], [59.9, 7885.0], [60.0, 7885.0], [60.1, 7896.0], [60.2, 7896.0], [60.3, 7902.0], [60.4, 7902.0], [60.5, 7903.0], [60.6, 7903.0], [60.7, 7955.0], [60.8, 7955.0], [60.9, 7958.0], [61.0, 7958.0], [61.1, 8002.0], [61.2, 8002.0], [61.3, 8123.0], [61.4, 8123.0], [61.5, 8126.0], [61.6, 8126.0], [61.7, 8127.0], [61.8, 8127.0], [61.9, 8134.0], [62.0, 8134.0], [62.1, 8167.0], [62.2, 8167.0], [62.3, 8217.0], [62.4, 8217.0], [62.5, 8223.0], [62.6, 8223.0], [62.7, 8258.0], [62.8, 8258.0], [62.9, 8272.0], [63.0, 8272.0], [63.1, 8310.0], [63.2, 8310.0], [63.3, 8367.0], [63.4, 8367.0], [63.5, 8381.0], [63.6, 8381.0], [63.7, 8382.0], [63.8, 8382.0], [63.9, 8390.0], [64.0, 8390.0], [64.1, 8427.0], [64.2, 8427.0], [64.3, 8429.0], [64.4, 8429.0], [64.5, 8430.0], [64.6, 8430.0], [64.7, 8528.0], [64.8, 8528.0], [64.9, 8537.0], [65.0, 8537.0], [65.1, 8549.0], [65.2, 8549.0], [65.3, 8582.0], [65.4, 8582.0], [65.5, 8619.0], [65.6, 8619.0], [65.7, 8658.0], [65.8, 8658.0], [65.9, 8692.0], [66.0, 8692.0], [66.1, 8708.0], [66.2, 8708.0], [66.3, 8744.0], [66.4, 8744.0], [66.5, 8752.0], [66.6, 8752.0], [66.7, 8808.0], [66.8, 8808.0], [66.9, 8822.0], [67.0, 8822.0], [67.1, 8862.0], [67.2, 8862.0], [67.3, 8900.0], [67.4, 8900.0], [67.5, 8920.0], [67.6, 8920.0], [67.7, 8991.0], [67.8, 8991.0], [67.9, 9009.0], [68.0, 9009.0], [68.1, 9026.0], [68.2, 9026.0], [68.3, 9026.0], [68.4, 9026.0], [68.5, 9110.0], [68.6, 9110.0], [68.7, 9112.0], [68.8, 9112.0], [68.9, 9120.0], [69.0, 9120.0], [69.1, 9133.0], [69.2, 9133.0], [69.3, 9155.0], [69.4, 9155.0], [69.5, 9159.0], [69.6, 9159.0], [69.7, 9160.0], [69.8, 9160.0], [69.9, 9185.0], [70.0, 9185.0], [70.1, 9212.0], [70.2, 9212.0], [70.3, 9240.0], [70.4, 9240.0], [70.5, 9241.0], [70.6, 9241.0], [70.7, 9266.0], [70.8, 9266.0], [70.9, 9288.0], [71.0, 9288.0], [71.1, 9325.0], [71.2, 9325.0], [71.3, 9349.0], [71.4, 9349.0], [71.5, 9359.0], [71.6, 9359.0], [71.7, 9363.0], [71.8, 9363.0], [71.9, 9367.0], [72.0, 9367.0], [72.1, 9373.0], [72.2, 9373.0], [72.3, 9388.0], [72.4, 9388.0], [72.5, 9396.0], [72.6, 9396.0], [72.7, 9399.0], [72.8, 9399.0], [72.9, 9412.0], [73.0, 9412.0], [73.1, 9419.0], [73.2, 9419.0], [73.3, 9419.0], [73.4, 9419.0], [73.5, 9421.0], [73.6, 9421.0], [73.7, 9429.0], [73.8, 9429.0], [73.9, 9436.0], [74.0, 9436.0], [74.1, 9439.0], [74.2, 9439.0], [74.3, 9443.0], [74.4, 9443.0], [74.5, 9446.0], [74.6, 9446.0], [74.7, 9502.0], [74.8, 9502.0], [74.9, 9526.0], [75.0, 9526.0], [75.1, 9528.0], [75.2, 9528.0], [75.3, 9535.0], [75.4, 9535.0], [75.5, 9536.0], [75.6, 9536.0], [75.7, 9539.0], [75.8, 9539.0], [75.9, 9551.0], [76.0, 9551.0], [76.1, 9583.0], [76.2, 9583.0], [76.3, 9594.0], [76.4, 9594.0], [76.5, 9594.0], [76.6, 9594.0], [76.7, 9610.0], [76.8, 9610.0], [76.9, 9636.0], [77.0, 9636.0], [77.1, 9646.0], [77.2, 9646.0], [77.3, 9673.0], [77.4, 9673.0], [77.5, 9686.0], [77.6, 9686.0], [77.7, 9688.0], [77.8, 9688.0], [77.9, 9717.0], [78.0, 9717.0], [78.1, 9750.0], [78.2, 9750.0], [78.3, 9768.0], [78.4, 9768.0], [78.5, 9776.0], [78.6, 9776.0], [78.7, 9796.0], [78.8, 9796.0], [78.9, 9808.0], [79.0, 9808.0], [79.1, 9813.0], [79.2, 9813.0], [79.3, 9840.0], [79.4, 9840.0], [79.5, 9881.0], [79.6, 9881.0], [79.7, 9933.0], [79.8, 9933.0], [79.9, 9938.0], [80.0, 9938.0], [80.1, 10001.0], [80.2, 10001.0], [80.3, 10045.0], [80.4, 10045.0], [80.5, 10055.0], [80.6, 10055.0], [80.7, 10057.0], [80.8, 10057.0], [80.9, 10089.0], [81.0, 10089.0], [81.1, 10097.0], [81.2, 10097.0], [81.3, 10113.0], [81.4, 10113.0], [81.5, 10138.0], [81.6, 10138.0], [81.7, 10150.0], [81.8, 10150.0], [81.9, 10169.0], [82.0, 10169.0], [82.1, 10178.0], [82.2, 10178.0], [82.3, 10262.0], [82.4, 10262.0], [82.5, 10266.0], [82.6, 10266.0], [82.7, 10273.0], [82.8, 10273.0], [82.9, 10310.0], [83.0, 10310.0], [83.1, 10324.0], [83.2, 10324.0], [83.3, 10386.0], [83.4, 10386.0], [83.5, 10418.0], [83.6, 10418.0], [83.7, 10462.0], [83.8, 10462.0], [83.9, 10464.0], [84.0, 10464.0], [84.1, 10465.0], [84.2, 10465.0], [84.3, 10469.0], [84.4, 10469.0], [84.5, 10475.0], [84.6, 10475.0], [84.7, 10508.0], [84.8, 10508.0], [84.9, 10523.0], [85.0, 10523.0], [85.1, 10538.0], [85.2, 10538.0], [85.3, 10614.0], [85.4, 10614.0], [85.5, 10623.0], [85.6, 10623.0], [85.7, 10646.0], [85.8, 10646.0], [85.9, 10700.0], [86.0, 10700.0], [86.1, 10709.0], [86.2, 10709.0], [86.3, 10751.0], [86.4, 10751.0], [86.5, 10768.0], [86.6, 10768.0], [86.7, 10775.0], [86.8, 10775.0], [86.9, 10897.0], [87.0, 10897.0], [87.1, 10936.0], [87.2, 10936.0], [87.3, 10962.0], [87.4, 10962.0], [87.5, 10993.0], [87.6, 10993.0], [87.7, 10996.0], [87.8, 10996.0], [87.9, 11003.0], [88.0, 11003.0], [88.1, 11027.0], [88.2, 11027.0], [88.3, 11042.0], [88.4, 11042.0], [88.5, 11051.0], [88.6, 11051.0], [88.7, 11076.0], [88.8, 11076.0], [88.9, 11082.0], [89.0, 11082.0], [89.1, 11096.0], [89.2, 11096.0], [89.3, 11111.0], [89.4, 11111.0], [89.5, 11156.0], [89.6, 11156.0], [89.7, 11207.0], [89.8, 11207.0], [89.9, 11299.0], [90.0, 11299.0], [90.1, 11300.0], [90.2, 11300.0], [90.3, 11473.0], [90.4, 11473.0], [90.5, 11482.0], [90.6, 11482.0], [90.7, 11484.0], [90.8, 11484.0], [90.9, 11552.0], [91.0, 11552.0], [91.1, 11555.0], [91.2, 11555.0], [91.3, 11631.0], [91.4, 11631.0], [91.5, 11638.0], [91.6, 11638.0], [91.7, 11642.0], [91.8, 11642.0], [91.9, 11698.0], [92.0, 11698.0], [92.1, 11704.0], [92.2, 11704.0], [92.3, 11712.0], [92.4, 11712.0], [92.5, 11738.0], [92.6, 11738.0], [92.7, 11754.0], [92.8, 11754.0], [92.9, 11764.0], [93.0, 11764.0], [93.1, 11767.0], [93.2, 11767.0], [93.3, 11792.0], [93.4, 11792.0], [93.5, 11876.0], [93.6, 11876.0], [93.7, 11894.0], [93.8, 11894.0], [93.9, 11948.0], [94.0, 11948.0], [94.1, 11948.0], [94.2, 11948.0], [94.3, 11955.0], [94.4, 11955.0], [94.5, 12005.0], [94.6, 12005.0], [94.7, 12021.0], [94.8, 12021.0], [94.9, 12027.0], [95.0, 12027.0], [95.1, 12075.0], [95.2, 12075.0], [95.3, 12075.0], [95.4, 12075.0], [95.5, 12126.0], [95.6, 12126.0], [95.7, 12168.0], [95.8, 12168.0], [95.9, 12226.0], [96.0, 12226.0], [96.1, 12291.0], [96.2, 12291.0], [96.3, 12312.0], [96.4, 12312.0], [96.5, 12326.0], [96.6, 12326.0], [96.7, 12331.0], [96.8, 12331.0], [96.9, 12337.0], [97.0, 12337.0], [97.1, 12368.0], [97.2, 12368.0], [97.3, 12391.0], [97.4, 12391.0], [97.5, 12411.0], [97.6, 12411.0], [97.7, 12585.0], [97.8, 12585.0], [97.9, 12630.0], [98.0, 12630.0], [98.1, 12831.0], [98.2, 12831.0], [98.3, 13140.0], [98.4, 13140.0], [98.5, 13160.0], [98.6, 13160.0], [98.7, 13286.0], [98.8, 13286.0], [98.9, 13401.0], [99.0, 13401.0], [99.1, 13531.0], [99.2, 13531.0], [99.3, 13819.0], [99.4, 13819.0], [99.5, 13957.0], [99.6, 13957.0], [99.7, 14837.0], [99.8, 14837.0], [99.9, 14838.0], [100.0, 14838.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 73.0], [0.1, 73.0], [0.2, 76.0], [0.3, 76.0], [0.4, 76.0], [0.5, 76.0], [0.6, 76.0], [0.7, 77.0], [0.8, 78.0], [0.9, 78.0], [1.0, 78.0], [1.1, 78.0], [1.2, 78.0], [1.3, 78.0], [1.4, 78.0], [1.5, 78.0], [1.6, 79.0], [1.7, 79.0], [1.8, 79.0], [1.9, 79.0], [2.0, 80.0], [2.1, 80.0], [2.2, 80.0], [2.3, 80.0], [2.4, 80.0], [2.5, 80.0], [2.6, 80.0], [2.7, 80.0], [2.8, 80.0], [2.9, 80.0], [3.0, 80.0], [3.1, 80.0], [3.2, 80.0], [3.3, 80.0], [3.4, 80.0], [3.5, 80.0], [3.6, 81.0], [3.7, 81.0], [3.8, 81.0], [3.9, 81.0], [4.0, 81.0], [4.1, 81.0], [4.2, 81.0], [4.3, 81.0], [4.4, 81.0], [4.5, 81.0], [4.6, 81.0], [4.7, 81.0], [4.8, 81.0], [4.9, 81.0], [5.0, 81.0], [5.1, 81.0], [5.2, 82.0], [5.3, 82.0], [5.4, 82.0], [5.5, 82.0], [5.6, 82.0], [5.7, 82.0], [5.8, 82.0], [5.9, 82.0], [6.0, 82.0], [6.1, 82.0], [6.2, 82.0], [6.3, 82.0], [6.4, 82.0], [6.5, 82.0], [6.6, 82.0], [6.7, 82.0], [6.8, 82.0], [6.9, 82.0], [7.0, 82.0], [7.1, 82.0], [7.2, 82.0], [7.3, 82.0], [7.4, 82.0], [7.5, 82.0], [7.6, 82.0], [7.7, 82.0], [7.8, 82.0], [7.9, 82.0], [8.0, 82.0], [8.1, 82.0], [8.2, 83.0], [8.3, 83.0], [8.4, 83.0], [8.5, 83.0], [8.6, 83.0], [8.7, 83.0], [8.8, 83.0], [8.9, 83.0], [9.0, 83.0], [9.1, 83.0], [9.2, 83.0], [9.3, 83.0], [9.4, 83.0], [9.5, 83.0], [9.6, 83.0], [9.7, 83.0], [9.8, 83.0], [9.9, 83.0], [10.0, 83.0], [10.1, 83.0], [10.2, 83.0], [10.3, 83.0], [10.4, 83.0], [10.5, 83.0], [10.6, 83.0], [10.7, 83.0], [10.8, 83.0], [10.9, 83.0], [11.0, 84.0], [11.1, 84.0], [11.2, 84.0], [11.3, 84.0], [11.4, 84.0], [11.5, 84.0], [11.6, 84.0], [11.7, 84.0], [11.8, 84.0], [11.9, 84.0], [12.0, 84.0], [12.1, 84.0], [12.2, 84.0], [12.3, 84.0], [12.4, 84.0], [12.5, 84.0], [12.6, 84.0], [12.7, 84.0], [12.8, 84.0], [12.9, 84.0], [13.0, 84.0], [13.1, 84.0], [13.2, 84.0], [13.3, 84.0], [13.4, 84.0], [13.5, 84.0], [13.6, 84.0], [13.7, 84.0], [13.8, 84.0], [13.9, 84.0], [14.0, 84.0], [14.1, 84.0], [14.2, 84.0], [14.3, 84.0], [14.4, 85.0], [14.5, 85.0], [14.6, 85.0], [14.7, 85.0], [14.8, 85.0], [14.9, 85.0], [15.0, 85.0], [15.1, 85.0], [15.2, 85.0], [15.3, 85.0], [15.4, 85.0], [15.5, 85.0], [15.6, 85.0], [15.7, 85.0], [15.8, 85.0], [15.9, 85.0], [16.0, 85.0], [16.1, 85.0], [16.2, 85.0], [16.3, 85.0], [16.4, 85.0], [16.5, 85.0], [16.6, 85.0], [16.7, 85.0], [16.8, 85.0], [16.9, 85.0], [17.0, 85.0], [17.1, 85.0], [17.2, 85.0], [17.3, 85.0], [17.4, 85.0], [17.5, 85.0], [17.6, 85.0], [17.7, 85.0], [17.8, 85.0], [17.9, 85.0], [18.0, 85.0], [18.1, 85.0], [18.2, 85.0], [18.3, 85.0], [18.4, 86.0], [18.5, 86.0], [18.6, 86.0], [18.7, 86.0], [18.8, 86.0], [18.9, 86.0], [19.0, 86.0], [19.1, 86.0], [19.2, 86.0], [19.3, 86.0], [19.4, 86.0], [19.5, 86.0], [19.6, 86.0], [19.7, 86.0], [19.8, 86.0], [19.9, 86.0], [20.0, 86.0], [20.1, 86.0], [20.2, 86.0], [20.3, 86.0], [20.4, 86.0], [20.5, 86.0], [20.6, 86.0], [20.7, 86.0], [20.8, 86.0], [20.9, 86.0], [21.0, 86.0], [21.1, 86.0], [21.2, 86.0], [21.3, 86.0], [21.4, 86.0], [21.5, 86.0], [21.6, 86.0], [21.7, 86.0], [21.8, 86.0], [21.9, 86.0], [22.0, 86.0], [22.1, 86.0], [22.2, 86.0], [22.3, 86.0], [22.4, 86.0], [22.5, 86.0], [22.6, 86.0], [22.7, 86.0], [22.8, 86.0], [22.9, 86.0], [23.0, 86.0], [23.1, 86.0], [23.2, 86.0], [23.3, 86.0], [23.4, 86.0], [23.5, 86.0], [23.6, 86.0], [23.7, 86.0], [23.8, 87.0], [23.9, 87.0], [24.0, 87.0], [24.1, 87.0], [24.2, 87.0], [24.3, 87.0], [24.4, 87.0], [24.5, 87.0], [24.6, 87.0], [24.7, 87.0], [24.8, 87.0], [24.9, 87.0], [25.0, 87.0], [25.1, 87.0], [25.2, 87.0], [25.3, 87.0], [25.4, 87.0], [25.5, 87.0], [25.6, 87.0], [25.7, 87.0], [25.8, 87.0], [25.9, 87.0], [26.0, 87.0], [26.1, 87.0], [26.2, 87.0], [26.3, 87.0], [26.4, 87.0], [26.5, 87.0], [26.6, 87.0], [26.7, 87.0], [26.8, 87.0], [26.9, 87.0], [27.0, 87.0], [27.1, 87.0], [27.2, 87.0], [27.3, 87.0], [27.4, 87.0], [27.5, 87.0], [27.6, 88.0], [27.7, 88.0], [27.8, 88.0], [27.9, 88.0], [28.0, 88.0], [28.1, 88.0], [28.2, 88.0], [28.3, 88.0], [28.4, 88.0], [28.5, 88.0], [28.6, 88.0], [28.7, 88.0], [28.8, 88.0], [28.9, 88.0], [29.0, 88.0], [29.1, 88.0], [29.2, 88.0], [29.3, 88.0], [29.4, 88.0], [29.5, 88.0], [29.6, 88.0], [29.7, 88.0], [29.8, 88.0], [29.9, 88.0], [30.0, 88.0], [30.1, 88.0], [30.2, 88.0], [30.3, 88.0], [30.4, 88.0], [30.5, 88.0], [30.6, 88.0], [30.7, 88.0], [30.8, 88.0], [30.9, 88.0], [31.0, 88.0], [31.1, 88.0], [31.2, 88.0], [31.3, 88.0], [31.4, 89.0], [31.5, 89.0], [31.6, 89.0], [31.7, 89.0], [31.8, 89.0], [31.9, 89.0], [32.0, 89.0], [32.1, 89.0], [32.2, 89.0], [32.3, 89.0], [32.4, 89.0], [32.5, 89.0], [32.6, 89.0], [32.7, 89.0], [32.8, 89.0], [32.9, 89.0], [33.0, 89.0], [33.1, 89.0], [33.2, 89.0], [33.3, 89.0], [33.4, 89.0], [33.5, 89.0], [33.6, 89.0], [33.7, 89.0], [33.8, 89.0], [33.9, 89.0], [34.0, 89.0], [34.1, 89.0], [34.2, 89.0], [34.3, 89.0], [34.4, 90.0], [34.5, 90.0], [34.6, 90.0], [34.7, 90.0], [34.8, 90.0], [34.9, 90.0], [35.0, 90.0], [35.1, 90.0], [35.2, 90.0], [35.3, 90.0], [35.4, 90.0], [35.5, 90.0], [35.6, 90.0], [35.7, 90.0], [35.8, 90.0], [35.9, 90.0], [36.0, 90.0], [36.1, 90.0], [36.2, 90.0], [36.3, 90.0], [36.4, 90.0], [36.5, 90.0], [36.6, 91.0], [36.7, 91.0], [36.8, 91.0], [36.9, 91.0], [37.0, 91.0], [37.1, 91.0], [37.2, 91.0], [37.3, 91.0], [37.4, 91.0], [37.5, 91.0], [37.6, 91.0], [37.7, 91.0], [37.8, 91.0], [37.9, 91.0], [38.0, 91.0], [38.1, 91.0], [38.2, 91.0], [38.3, 91.0], [38.4, 91.0], [38.5, 91.0], [38.6, 91.0], [38.7, 91.0], [38.8, 91.0], [38.9, 92.0], [39.0, 92.0], [39.1, 92.0], [39.2, 92.0], [39.3, 92.0], [39.4, 92.0], [39.5, 92.0], [39.6, 92.0], [39.7, 92.0], [39.8, 92.0], [39.9, 92.0], [40.0, 92.0], [40.1, 92.0], [40.2, 92.0], [40.3, 92.0], [40.4, 92.0], [40.5, 92.0], [40.6, 92.0], [40.7, 92.0], [40.8, 92.0], [40.9, 92.0], [41.0, 92.0], [41.1, 92.0], [41.2, 93.0], [41.3, 93.0], [41.4, 93.0], [41.5, 93.0], [41.6, 93.0], [41.7, 93.0], [41.8, 93.0], [41.9, 93.0], [42.0, 93.0], [42.1, 93.0], [42.2, 93.0], [42.3, 93.0], [42.4, 93.0], [42.5, 93.0], [42.6, 93.0], [42.7, 93.0], [42.8, 93.0], [42.9, 93.0], [43.0, 94.0], [43.1, 94.0], [43.2, 94.0], [43.3, 94.0], [43.4, 94.0], [43.5, 94.0], [43.6, 94.0], [43.7, 94.0], [43.8, 94.0], [43.9, 94.0], [44.0, 95.0], [44.1, 95.0], [44.2, 95.0], [44.3, 95.0], [44.4, 95.0], [44.5, 95.0], [44.6, 95.0], [44.7, 95.0], [44.8, 96.0], [44.9, 96.0], [45.0, 96.0], [45.1, 96.0], [45.2, 96.0], [45.3, 96.0], [45.4, 96.0], [45.5, 96.0], [45.6, 96.0], [45.7, 96.0], [45.8, 96.0], [45.9, 96.0], [46.0, 97.0], [46.1, 97.0], [46.2, 97.0], [46.3, 97.0], [46.4, 97.0], [46.5, 97.0], [46.6, 97.0], [46.7, 97.0], [46.8, 98.0], [46.9, 98.0], [47.0, 98.0], [47.1, 98.0], [47.2, 98.0], [47.3, 98.0], [47.4, 99.0], [47.5, 99.0], [47.6, 99.0], [47.7, 99.0], [47.8, 99.0], [47.9, 99.0], [48.0, 100.0], [48.1, 100.0], [48.2, 100.0], [48.3, 100.0], [48.4, 100.0], [48.5, 100.0], [48.6, 101.0], [48.7, 101.0], [48.8, 101.0], [48.9, 101.0], [49.0, 101.0], [49.1, 101.0], [49.2, 101.0], [49.3, 101.0], [49.4, 102.0], [49.5, 102.0], [49.6, 102.0], [49.7, 102.0], [49.8, 102.0], [49.9, 102.0], [50.0, 103.0], [50.1, 103.0], [50.2, 103.0], [50.3, 103.0], [50.4, 103.0], [50.5, 103.0], [50.6, 104.0], [50.7, 104.0], [50.8, 104.0], [50.9, 104.0], [51.0, 104.0], [51.1, 104.0], [51.2, 105.0], [51.3, 105.0], [51.4, 105.0], [51.5, 106.0], [51.6, 106.0], [51.7, 106.0], [51.8, 106.0], [51.9, 106.0], [52.0, 106.0], [52.1, 106.0], [52.2, 107.0], [52.3, 107.0], [52.4, 107.0], [52.5, 107.0], [52.6, 107.0], [52.7, 107.0], [52.8, 107.0], [52.9, 107.0], [53.0, 107.0], [53.1, 107.0], [53.2, 108.0], [53.3, 108.0], [53.4, 108.0], [53.5, 108.0], [53.6, 108.0], [53.7, 108.0], [53.8, 108.0], [53.9, 108.0], [54.0, 108.0], [54.1, 108.0], [54.2, 108.0], [54.3, 108.0], [54.4, 108.0], [54.5, 109.0], [54.6, 109.0], [54.7, 109.0], [54.8, 109.0], [54.9, 109.0], [55.0, 109.0], [55.1, 109.0], [55.2, 109.0], [55.3, 109.0], [55.4, 109.0], [55.5, 110.0], [55.6, 110.0], [55.7, 110.0], [55.8, 110.0], [55.9, 111.0], [56.0, 111.0], [56.1, 111.0], [56.2, 111.0], [56.3, 111.0], [56.4, 111.0], [56.5, 111.0], [56.6, 111.0], [56.7, 111.0], [56.8, 111.0], [56.9, 112.0], [57.0, 112.0], [57.1, 112.0], [57.2, 112.0], [57.3, 112.0], [57.4, 112.0], [57.5, 112.0], [57.6, 113.0], [57.7, 113.0], [57.8, 113.0], [57.9, 113.0], [58.0, 114.0], [58.1, 114.0], [58.2, 114.0], [58.3, 114.0], [58.4, 115.0], [58.5, 115.0], [58.6, 115.0], [58.7, 115.0], [58.8, 116.0], [58.9, 116.0], [59.0, 118.0], [59.1, 118.0], [59.2, 121.0], [59.3, 121.0], [59.4, 121.0], [59.5, 121.0], [59.6, 123.0], [59.7, 123.0], [59.8, 123.0], [59.9, 123.0], [60.0, 124.0], [60.1, 124.0], [60.2, 127.0], [60.3, 127.0], [60.4, 127.0], [60.5, 127.0], [60.6, 128.0], [60.7, 128.0], [60.8, 128.0], [60.9, 131.0], [61.0, 131.0], [61.1, 135.0], [61.2, 135.0], [61.3, 136.0], [61.4, 136.0], [61.5, 140.0], [61.6, 140.0], [61.7, 142.0], [61.8, 142.0], [61.9, 143.0], [62.0, 143.0], [62.1, 148.0], [62.2, 148.0], [62.3, 150.0], [62.4, 150.0], [62.5, 160.0], [62.6, 160.0], [62.7, 165.0], [62.8, 165.0], [62.9, 178.0], [63.0, 178.0], [63.1, 181.0], [63.2, 181.0], [63.3, 184.0], [63.4, 184.0], [63.5, 248.0], [63.6, 248.0], [63.7, 252.0], [63.8, 252.0], [63.9, 254.0], [64.0, 254.0], [64.1, 274.0], [64.2, 274.0], [64.3, 277.0], [64.4, 277.0], [64.5, 295.0], [64.6, 295.0], [64.7, 295.0], [64.8, 295.0], [64.9, 310.0], [65.0, 310.0], [65.1, 327.0], [65.2, 327.0], [65.3, 334.0], [65.4, 334.0], [65.5, 338.0], [65.6, 338.0], [65.7, 340.0], [65.8, 340.0], [65.9, 350.0], [66.0, 350.0], [66.1, 361.0], [66.2, 361.0], [66.3, 385.0], [66.4, 385.0], [66.5, 392.0], [66.6, 392.0], [66.7, 402.0], [66.8, 402.0], [66.9, 405.0], [67.0, 405.0], [67.1, 411.0], [67.2, 411.0], [67.3, 430.0], [67.4, 430.0], [67.5, 438.0], [67.6, 438.0], [67.7, 452.0], [67.8, 452.0], [67.9, 453.0], [68.0, 453.0], [68.1, 456.0], [68.2, 456.0], [68.3, 457.0], [68.4, 457.0], [68.5, 458.0], [68.6, 458.0], [68.7, 459.0], [68.8, 459.0], [68.9, 464.0], [69.0, 464.0], [69.1, 465.0], [69.2, 465.0], [69.3, 485.0], [69.4, 485.0], [69.5, 501.0], [69.6, 501.0], [69.7, 503.0], [69.8, 503.0], [69.9, 506.0], [70.0, 506.0], [70.1, 512.0], [70.2, 512.0], [70.3, 513.0], [70.4, 513.0], [70.5, 513.0], [70.6, 513.0], [70.7, 518.0], [70.8, 518.0], [70.9, 519.0], [71.0, 519.0], [71.1, 525.0], [71.2, 525.0], [71.3, 539.0], [71.4, 539.0], [71.5, 540.0], [71.6, 540.0], [71.7, 547.0], [71.8, 547.0], [71.9, 555.0], [72.0, 555.0], [72.1, 560.0], [72.2, 560.0], [72.3, 564.0], [72.4, 564.0], [72.5, 576.0], [72.6, 576.0], [72.7, 582.0], [72.8, 582.0], [72.9, 590.0], [73.0, 590.0], [73.1, 592.0], [73.2, 592.0], [73.3, 595.0], [73.4, 595.0], [73.5, 614.0], [73.6, 614.0], [73.7, 614.0], [73.8, 614.0], [73.9, 615.0], [74.0, 615.0], [74.1, 620.0], [74.2, 620.0], [74.3, 621.0], [74.4, 621.0], [74.5, 626.0], [74.6, 626.0], [74.7, 633.0], [74.8, 633.0], [74.9, 634.0], [75.0, 634.0], [75.1, 638.0], [75.2, 638.0], [75.3, 639.0], [75.4, 639.0], [75.5, 647.0], [75.6, 647.0], [75.7, 649.0], [75.8, 649.0], [75.9, 650.0], [76.0, 650.0], [76.1, 650.0], [76.2, 650.0], [76.3, 653.0], [76.4, 653.0], [76.5, 656.0], [76.6, 656.0], [76.7, 792.0], [76.8, 792.0], [76.9, 811.0], [77.0, 811.0], [77.1, 815.0], [77.2, 815.0], [77.3, 820.0], [77.4, 820.0], [77.5, 823.0], [77.6, 823.0], [77.7, 843.0], [77.8, 843.0], [77.9, 856.0], [78.0, 856.0], [78.1, 862.0], [78.2, 862.0], [78.3, 868.0], [78.4, 868.0], [78.5, 875.0], [78.6, 875.0], [78.7, 880.0], [78.8, 880.0], [78.9, 1024.0], [79.0, 1024.0], [79.1, 1111.0], [79.2, 1111.0], [79.3, 1113.0], [79.4, 1113.0], [79.5, 1208.0], [79.6, 1208.0], [79.7, 1215.0], [79.8, 1215.0], [79.9, 1279.0], [80.0, 1279.0], [80.1, 1299.0], [80.2, 1299.0], [80.3, 1315.0], [80.4, 1315.0], [80.5, 1400.0], [80.6, 1400.0], [80.7, 1426.0], [80.8, 1426.0], [80.9, 1437.0], [81.0, 1437.0], [81.1, 1444.0], [81.2, 1444.0], [81.3, 1466.0], [81.4, 1466.0], [81.5, 1467.0], [81.6, 1467.0], [81.7, 1469.0], [81.8, 1469.0], [81.9, 1476.0], [82.0, 1476.0], [82.1, 1478.0], [82.2, 1478.0], [82.3, 1480.0], [82.4, 1480.0], [82.5, 1489.0], [82.6, 1489.0], [82.7, 1499.0], [82.8, 1499.0], [82.9, 1516.0], [83.0, 1516.0], [83.1, 1532.0], [83.2, 1532.0], [83.3, 1533.0], [83.4, 1533.0], [83.5, 1536.0], [83.6, 1536.0], [83.7, 1549.0], [83.8, 1549.0], [83.9, 1550.0], [84.0, 1550.0], [84.1, 1555.0], [84.2, 1555.0], [84.3, 1567.0], [84.4, 1567.0], [84.5, 1570.0], [84.6, 1570.0], [84.7, 1582.0], [84.8, 1582.0], [84.9, 1584.0], [85.0, 1584.0], [85.1, 1592.0], [85.2, 1592.0], [85.3, 1599.0], [85.4, 1599.0], [85.5, 1614.0], [85.6, 1614.0], [85.7, 1615.0], [85.8, 1615.0], [85.9, 1621.0], [86.0, 1621.0], [86.1, 1625.0], [86.2, 1625.0], [86.3, 1627.0], [86.4, 1627.0], [86.5, 1631.0], [86.6, 1631.0], [86.7, 1638.0], [86.8, 1638.0], [86.9, 1642.0], [87.0, 1642.0], [87.1, 1643.0], [87.2, 1643.0], [87.3, 1654.0], [87.4, 1654.0], [87.5, 1656.0], [87.6, 1656.0], [87.7, 1656.0], [87.8, 1656.0], [87.9, 1661.0], [88.0, 1661.0], [88.1, 1661.0], [88.2, 1661.0], [88.3, 1666.0], [88.4, 1666.0], [88.5, 1668.0], [88.6, 1668.0], [88.7, 1677.0], [88.8, 1677.0], [88.9, 1679.0], [89.0, 1679.0], [89.1, 1693.0], [89.2, 1693.0], [89.3, 1696.0], [89.4, 1696.0], [89.5, 1699.0], [89.6, 1699.0], [89.7, 1714.0], [89.8, 1714.0], [89.9, 1719.0], [90.0, 1719.0], [90.1, 1720.0], [90.2, 1720.0], [90.3, 1736.0], [90.4, 1736.0], [90.5, 1752.0], [90.6, 1752.0], [90.7, 1752.0], [90.8, 1752.0], [90.9, 1768.0], [91.0, 1768.0], [91.1, 1852.0], [91.2, 1852.0], [91.3, 1900.0], [91.4, 1900.0], [91.5, 1904.0], [91.6, 1904.0], [91.7, 1904.0], [91.8, 1904.0], [91.9, 1912.0], [92.0, 1912.0], [92.1, 1928.0], [92.2, 1928.0], [92.3, 1940.0], [92.4, 1940.0], [92.5, 1955.0], [92.6, 1955.0], [92.7, 1962.0], [92.8, 1962.0], [92.9, 1976.0], [93.0, 1976.0], [93.1, 1977.0], [93.2, 1977.0], [93.3, 1980.0], [93.4, 1980.0], [93.5, 2956.0], [93.6, 2956.0], [93.7, 2962.0], [93.8, 2962.0], [93.9, 2963.0], [94.0, 2963.0], [94.1, 2969.0], [94.2, 2969.0], [94.3, 3231.0], [94.4, 3231.0], [94.5, 3243.0], [94.6, 3243.0], [94.7, 3274.0], [94.8, 3274.0], [94.9, 3274.0], [95.0, 3274.0], [95.1, 3470.0], [95.2, 3470.0], [95.3, 3489.0], [95.4, 3489.0], [95.5, 3497.0], [95.6, 3497.0], [95.7, 3499.0], [95.8, 3499.0], [95.9, 3501.0], [96.0, 3501.0], [96.1, 3510.0], [96.2, 3510.0], [96.3, 3518.0], [96.4, 3518.0], [96.5, 3559.0], [96.6, 3559.0], [96.7, 3572.0], [96.8, 3572.0], [96.9, 3589.0], [97.0, 3589.0], [97.1, 4574.0], [97.2, 4574.0], [97.3, 4574.0], [97.4, 4574.0], [97.5, 7236.0], [97.6, 7236.0], [97.7, 7264.0], [97.8, 7264.0], [97.9, 7269.0], [98.0, 7269.0], [98.1, 7280.0], [98.2, 7280.0], [98.3, 7351.0], [98.4, 7351.0], [98.5, 15142.0], [98.6, 15142.0], [98.7, 15170.0], [98.8, 15170.0], [98.9, 15173.0], [99.0, 15173.0], [99.1, 15175.0], [99.2, 15175.0], [99.3, 15214.0], [99.4, 15214.0], [99.5, 15226.0], [99.6, 15226.0], [99.7, 15244.0], [99.8, 15244.0], [99.9, 15323.0], [100.0, 15323.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 1167.0], [0.1, 1167.0], [0.2, 1251.0], [0.3, 1251.0], [0.4, 1313.0], [0.5, 1313.0], [0.6, 1313.0], [0.7, 1370.0], [0.8, 1374.0], [0.9, 1374.0], [1.0, 1380.0], [1.1, 1380.0], [1.2, 1388.0], [1.3, 1388.0], [1.4, 1392.0], [1.5, 1392.0], [1.6, 1394.0], [1.7, 1394.0], [1.8, 1396.0], [1.9, 1396.0], [2.0, 1401.0], [2.1, 1401.0], [2.2, 1414.0], [2.3, 1414.0], [2.4, 1429.0], [2.5, 1429.0], [2.6, 1588.0], [2.7, 1588.0], [2.8, 1588.0], [2.9, 1662.0], [3.0, 1662.0], [3.1, 1685.0], [3.2, 1685.0], [3.3, 1690.0], [3.4, 1690.0], [3.5, 1735.0], [3.6, 1735.0], [3.7, 1787.0], [3.8, 1787.0], [3.9, 1855.0], [4.0, 1855.0], [4.1, 1952.0], [4.2, 1952.0], [4.3, 2000.0], [4.4, 2000.0], [4.5, 2009.0], [4.6, 2009.0], [4.7, 2015.0], [4.8, 2015.0], [4.9, 2026.0], [5.0, 2026.0], [5.1, 2042.0], [5.2, 2042.0], [5.3, 2043.0], [5.4, 2043.0], [5.5, 2044.0], [5.6, 2044.0], [5.7, 2049.0], [5.8, 2049.0], [5.9, 2051.0], [6.0, 2051.0], [6.1, 2062.0], [6.2, 2062.0], [6.3, 2064.0], [6.4, 2064.0], [6.5, 2071.0], [6.6, 2071.0], [6.7, 2079.0], [6.8, 2079.0], [6.9, 2086.0], [7.0, 2086.0], [7.1, 2096.0], [7.2, 2096.0], [7.3, 2102.0], [7.4, 2102.0], [7.5, 2108.0], [7.6, 2108.0], [7.7, 2110.0], [7.8, 2110.0], [7.9, 2114.0], [8.0, 2114.0], [8.1, 2114.0], [8.2, 2114.0], [8.3, 2115.0], [8.4, 2115.0], [8.5, 2117.0], [8.6, 2117.0], [8.7, 2119.0], [8.8, 2119.0], [8.9, 2134.0], [9.0, 2134.0], [9.1, 2137.0], [9.2, 2137.0], [9.3, 2141.0], [9.4, 2147.0], [9.5, 2147.0], [9.6, 2147.0], [9.7, 2147.0], [9.8, 2153.0], [9.9, 2153.0], [10.0, 2155.0], [10.1, 2155.0], [10.2, 2157.0], [10.3, 2157.0], [10.4, 2164.0], [10.5, 2164.0], [10.6, 2170.0], [10.7, 2170.0], [10.8, 2176.0], [10.9, 2176.0], [11.0, 2185.0], [11.1, 2185.0], [11.2, 2185.0], [11.3, 2185.0], [11.4, 2193.0], [11.5, 2193.0], [11.6, 2195.0], [11.7, 2195.0], [11.8, 2207.0], [11.9, 2207.0], [12.0, 2208.0], [12.1, 2208.0], [12.2, 2209.0], [12.3, 2209.0], [12.4, 2226.0], [12.5, 2226.0], [12.6, 2227.0], [12.7, 2227.0], [12.8, 2236.0], [12.9, 2236.0], [13.0, 2239.0], [13.1, 2239.0], [13.2, 2242.0], [13.3, 2242.0], [13.4, 2251.0], [13.5, 2251.0], [13.6, 2251.0], [13.7, 2251.0], [13.8, 2265.0], [13.9, 2265.0], [14.0, 2273.0], [14.1, 2273.0], [14.2, 2282.0], [14.3, 2282.0], [14.4, 2286.0], [14.5, 2286.0], [14.6, 2290.0], [14.7, 2290.0], [14.8, 2308.0], [14.9, 2308.0], [15.0, 2347.0], [15.1, 2347.0], [15.2, 2363.0], [15.3, 2363.0], [15.4, 2416.0], [15.5, 2416.0], [15.6, 2454.0], [15.7, 2454.0], [15.8, 2459.0], [15.9, 2459.0], [16.0, 2466.0], [16.1, 2466.0], [16.2, 2618.0], [16.3, 2618.0], [16.4, 2665.0], [16.5, 2665.0], [16.6, 2726.0], [16.7, 2726.0], [16.8, 2730.0], [16.9, 2730.0], [17.0, 2734.0], [17.1, 2734.0], [17.2, 2774.0], [17.3, 2774.0], [17.4, 2813.0], [17.5, 2813.0], [17.6, 2892.0], [17.7, 2892.0], [17.8, 2911.0], [17.9, 2911.0], [18.0, 2934.0], [18.1, 2934.0], [18.2, 2959.0], [18.3, 2959.0], [18.4, 2963.0], [18.5, 2963.0], [18.6, 3057.0], [18.7, 3057.0], [18.8, 3073.0], [18.9, 3073.0], [19.0, 3096.0], [19.1, 3096.0], [19.2, 3122.0], [19.3, 3122.0], [19.4, 3169.0], [19.5, 3169.0], [19.6, 3188.0], [19.7, 3188.0], [19.8, 3199.0], [19.9, 3199.0], [20.0, 3203.0], [20.1, 3203.0], [20.2, 3219.0], [20.3, 3219.0], [20.4, 3226.0], [20.5, 3226.0], [20.6, 3433.0], [20.7, 3433.0], [20.8, 3489.0], [20.9, 3489.0], [21.0, 3606.0], [21.1, 3606.0], [21.2, 3607.0], [21.3, 3607.0], [21.4, 3615.0], [21.5, 3615.0], [21.6, 3619.0], [21.7, 3619.0], [21.8, 3629.0], [21.9, 3629.0], [22.0, 3631.0], [22.1, 3631.0], [22.2, 3644.0], [22.3, 3644.0], [22.4, 3662.0], [22.5, 3662.0], [22.6, 3666.0], [22.7, 3666.0], [22.8, 3706.0], [22.9, 3706.0], [23.0, 3733.0], [23.1, 3733.0], [23.2, 3741.0], [23.3, 3741.0], [23.4, 3772.0], [23.5, 3772.0], [23.6, 3778.0], [23.7, 3778.0], [23.8, 3780.0], [23.9, 3780.0], [24.0, 3840.0], [24.1, 3840.0], [24.2, 3848.0], [24.3, 3848.0], [24.4, 3918.0], [24.5, 3918.0], [24.6, 3922.0], [24.7, 3922.0], [24.8, 3924.0], [24.9, 3924.0], [25.0, 3932.0], [25.1, 3932.0], [25.2, 3934.0], [25.3, 3934.0], [25.4, 3943.0], [25.5, 3943.0], [25.6, 3965.0], [25.7, 3965.0], [25.8, 4023.0], [25.9, 4023.0], [26.0, 4078.0], [26.1, 4078.0], [26.2, 4108.0], [26.3, 4108.0], [26.4, 4132.0], [26.5, 4132.0], [26.6, 4155.0], [26.7, 4155.0], [26.8, 4186.0], [26.9, 4186.0], [27.0, 4189.0], [27.1, 4189.0], [27.2, 4203.0], [27.3, 4203.0], [27.4, 4214.0], [27.5, 4214.0], [27.6, 4214.0], [27.7, 4214.0], [27.8, 4224.0], [27.9, 4224.0], [28.0, 4270.0], [28.1, 4270.0], [28.2, 4302.0], [28.3, 4302.0], [28.4, 4354.0], [28.5, 4354.0], [28.6, 4422.0], [28.7, 4422.0], [28.8, 4434.0], [28.9, 4434.0], [29.0, 4440.0], [29.1, 4440.0], [29.2, 4459.0], [29.3, 4459.0], [29.4, 4460.0], [29.5, 4460.0], [29.6, 4467.0], [29.7, 4467.0], [29.8, 4469.0], [29.9, 4469.0], [30.0, 4538.0], [30.1, 4538.0], [30.2, 4554.0], [30.3, 4554.0], [30.4, 4566.0], [30.5, 4566.0], [30.6, 4617.0], [30.7, 4617.0], [30.8, 4629.0], [30.9, 4629.0], [31.0, 4636.0], [31.1, 4636.0], [31.2, 4673.0], [31.3, 4673.0], [31.4, 4689.0], [31.5, 4689.0], [31.6, 4702.0], [31.7, 4702.0], [31.8, 4730.0], [31.9, 4730.0], [32.0, 4766.0], [32.1, 4766.0], [32.2, 4768.0], [32.3, 4768.0], [32.4, 4773.0], [32.5, 4773.0], [32.6, 4780.0], [32.7, 4780.0], [32.8, 4798.0], [32.9, 4798.0], [33.0, 4809.0], [33.1, 4809.0], [33.2, 4810.0], [33.3, 4810.0], [33.4, 4811.0], [33.5, 4811.0], [33.6, 4816.0], [33.7, 4816.0], [33.8, 4818.0], [33.9, 4818.0], [34.0, 4831.0], [34.1, 4831.0], [34.2, 4881.0], [34.3, 4881.0], [34.4, 4895.0], [34.5, 4895.0], [34.6, 4914.0], [34.7, 4914.0], [34.8, 4951.0], [34.9, 4951.0], [35.0, 4977.0], [35.1, 4977.0], [35.2, 4979.0], [35.3, 4979.0], [35.4, 4990.0], [35.5, 4990.0], [35.6, 4994.0], [35.7, 4994.0], [35.8, 4996.0], [35.9, 4996.0], [36.0, 4997.0], [36.1, 4997.0], [36.2, 5000.0], [36.3, 5000.0], [36.4, 5003.0], [36.5, 5003.0], [36.6, 5005.0], [36.7, 5005.0], [36.8, 5008.0], [36.9, 5008.0], [37.0, 5014.0], [37.1, 5014.0], [37.2, 5017.0], [37.3, 5017.0], [37.4, 5019.0], [37.5, 5019.0], [37.6, 5024.0], [37.7, 5024.0], [37.8, 5024.0], [37.9, 5045.0], [38.0, 5045.0], [38.1, 5047.0], [38.2, 5047.0], [38.3, 5048.0], [38.4, 5048.0], [38.5, 5054.0], [38.6, 5054.0], [38.7, 5054.0], [38.8, 5054.0], [38.9, 5055.0], [39.0, 5055.0], [39.1, 5091.0], [39.2, 5091.0], [39.3, 5098.0], [39.4, 5098.0], [39.5, 5107.0], [39.6, 5107.0], [39.7, 5123.0], [39.8, 5123.0], [39.9, 5131.0], [40.0, 5131.0], [40.1, 5132.0], [40.2, 5132.0], [40.3, 5170.0], [40.4, 5170.0], [40.5, 5174.0], [40.6, 5174.0], [40.7, 5174.0], [40.8, 5174.0], [40.9, 5180.0], [41.0, 5180.0], [41.1, 5193.0], [41.2, 5193.0], [41.3, 5204.0], [41.4, 5204.0], [41.5, 5239.0], [41.6, 5239.0], [41.7, 5250.0], [41.8, 5250.0], [41.9, 5347.0], [42.0, 5347.0], [42.1, 5375.0], [42.2, 5375.0], [42.3, 5385.0], [42.4, 5385.0], [42.5, 5402.0], [42.6, 5402.0], [42.7, 5461.0], [42.8, 5461.0], [42.9, 5545.0], [43.0, 5545.0], [43.1, 5710.0], [43.2, 5710.0], [43.3, 5800.0], [43.4, 5800.0], [43.5, 5802.0], [43.6, 5802.0], [43.7, 5972.0], [43.8, 5972.0], [43.9, 5977.0], [44.0, 5977.0], [44.1, 5986.0], [44.2, 5986.0], [44.3, 6027.0], [44.4, 6027.0], [44.5, 6036.0], [44.6, 6036.0], [44.7, 6058.0], [44.8, 6058.0], [44.9, 6073.0], [45.0, 6073.0], [45.1, 6104.0], [45.2, 6104.0], [45.3, 6151.0], [45.4, 6151.0], [45.5, 6201.0], [45.6, 6201.0], [45.7, 6207.0], [45.8, 6207.0], [45.9, 6208.0], [46.0, 6208.0], [46.1, 6235.0], [46.2, 6235.0], [46.3, 6331.0], [46.4, 6331.0], [46.5, 6342.0], [46.6, 6342.0], [46.7, 6617.0], [46.8, 6617.0], [46.9, 6645.0], [47.0, 6645.0], [47.1, 6655.0], [47.2, 6655.0], [47.3, 6656.0], [47.4, 6656.0], [47.5, 6667.0], [47.6, 6667.0], [47.7, 6707.0], [47.8, 6707.0], [47.9, 6717.0], [48.0, 6717.0], [48.1, 6738.0], [48.2, 6738.0], [48.3, 6786.0], [48.4, 6786.0], [48.5, 6790.0], [48.6, 6790.0], [48.7, 6793.0], [48.8, 6793.0], [48.9, 6794.0], [49.0, 6794.0], [49.1, 6814.0], [49.2, 6814.0], [49.3, 6823.0], [49.4, 6823.0], [49.5, 6842.0], [49.6, 6842.0], [49.7, 6848.0], [49.8, 6848.0], [49.9, 6911.0], [50.0, 6911.0], [50.1, 6923.0], [50.2, 6923.0], [50.3, 6966.0], [50.4, 6966.0], [50.5, 6967.0], [50.6, 6967.0], [50.7, 7073.0], [50.8, 7073.0], [50.9, 7174.0], [51.0, 7174.0], [51.1, 7195.0], [51.2, 7195.0], [51.3, 7260.0], [51.4, 7260.0], [51.5, 7260.0], [51.6, 7260.0], [51.7, 7262.0], [51.8, 7262.0], [51.9, 7270.0], [52.0, 7270.0], [52.1, 7288.0], [52.2, 7288.0], [52.3, 7311.0], [52.4, 7311.0], [52.5, 7320.0], [52.6, 7320.0], [52.7, 7377.0], [52.8, 7377.0], [52.9, 7389.0], [53.0, 7389.0], [53.1, 7397.0], [53.2, 7397.0], [53.3, 7423.0], [53.4, 7423.0], [53.5, 7425.0], [53.6, 7425.0], [53.7, 7430.0], [53.8, 7430.0], [53.9, 7431.0], [54.0, 7431.0], [54.1, 7439.0], [54.2, 7439.0], [54.3, 7458.0], [54.4, 7458.0], [54.5, 7465.0], [54.6, 7465.0], [54.7, 7480.0], [54.8, 7480.0], [54.9, 7494.0], [55.0, 7494.0], [55.1, 7539.0], [55.2, 7539.0], [55.3, 7550.0], [55.4, 7550.0], [55.5, 7588.0], [55.6, 7588.0], [55.7, 7590.0], [55.8, 7590.0], [55.9, 7722.0], [56.0, 7722.0], [56.1, 7760.0], [56.2, 7760.0], [56.3, 7775.0], [56.4, 7775.0], [56.5, 7787.0], [56.6, 7787.0], [56.7, 7830.0], [56.8, 7830.0], [56.9, 7842.0], [57.0, 7842.0], [57.1, 7851.0], [57.2, 7851.0], [57.3, 7864.0], [57.4, 7864.0], [57.5, 7946.0], [57.6, 7946.0], [57.7, 7976.0], [57.8, 7976.0], [57.9, 7992.0], [58.0, 7992.0], [58.1, 8038.0], [58.2, 8038.0], [58.3, 8042.0], [58.4, 8042.0], [58.5, 8043.0], [58.6, 8043.0], [58.7, 8056.0], [58.8, 8056.0], [58.9, 8092.0], [59.0, 8092.0], [59.1, 8213.0], [59.2, 8213.0], [59.3, 8215.0], [59.4, 8215.0], [59.5, 8215.0], [59.6, 8215.0], [59.7, 8237.0], [59.8, 8237.0], [59.9, 8241.0], [60.0, 8241.0], [60.1, 8249.0], [60.2, 8249.0], [60.3, 8297.0], [60.4, 8297.0], [60.5, 8301.0], [60.6, 8301.0], [60.7, 8306.0], [60.8, 8306.0], [60.9, 8347.0], [61.0, 8347.0], [61.1, 8355.0], [61.2, 8355.0], [61.3, 8394.0], [61.4, 8394.0], [61.5, 8419.0], [61.6, 8419.0], [61.7, 8455.0], [61.8, 8455.0], [61.9, 8473.0], [62.0, 8473.0], [62.1, 8477.0], [62.2, 8477.0], [62.3, 8496.0], [62.4, 8496.0], [62.5, 8514.0], [62.6, 8514.0], [62.7, 8533.0], [62.8, 8533.0], [62.9, 8605.0], [63.0, 8605.0], [63.1, 8622.0], [63.2, 8622.0], [63.3, 8641.0], [63.4, 8641.0], [63.5, 8707.0], [63.6, 8707.0], [63.7, 8747.0], [63.8, 8747.0], [63.9, 8777.0], [64.0, 8777.0], [64.1, 8794.0], [64.2, 8794.0], [64.3, 8839.0], [64.4, 8839.0], [64.5, 8853.0], [64.6, 8853.0], [64.7, 8898.0], [64.8, 8898.0], [64.9, 8915.0], [65.0, 8915.0], [65.1, 8926.0], [65.2, 8926.0], [65.3, 8956.0], [65.4, 8956.0], [65.5, 8987.0], [65.6, 8987.0], [65.7, 9005.0], [65.8, 9005.0], [65.9, 9013.0], [66.0, 9013.0], [66.1, 9090.0], [66.2, 9090.0], [66.3, 9119.0], [66.4, 9119.0], [66.5, 9129.0], [66.6, 9129.0], [66.7, 9166.0], [66.8, 9166.0], [66.9, 9199.0], [67.0, 9199.0], [67.1, 9214.0], [67.2, 9214.0], [67.3, 9216.0], [67.4, 9216.0], [67.5, 9245.0], [67.6, 9245.0], [67.7, 9258.0], [67.8, 9258.0], [67.9, 9292.0], [68.0, 9292.0], [68.1, 9326.0], [68.2, 9326.0], [68.3, 9348.0], [68.4, 9348.0], [68.5, 9370.0], [68.6, 9370.0], [68.7, 9433.0], [68.8, 9433.0], [68.9, 9438.0], [69.0, 9438.0], [69.1, 9460.0], [69.2, 9460.0], [69.3, 9471.0], [69.4, 9471.0], [69.5, 9474.0], [69.6, 9474.0], [69.7, 9481.0], [69.8, 9481.0], [69.9, 9481.0], [70.0, 9481.0], [70.1, 9504.0], [70.2, 9504.0], [70.3, 9505.0], [70.4, 9505.0], [70.5, 9511.0], [70.6, 9511.0], [70.7, 9530.0], [70.8, 9530.0], [70.9, 9536.0], [71.0, 9536.0], [71.1, 9614.0], [71.2, 9614.0], [71.3, 9615.0], [71.4, 9615.0], [71.5, 9618.0], [71.6, 9618.0], [71.7, 9620.0], [71.8, 9620.0], [71.9, 9623.0], [72.0, 9623.0], [72.1, 9648.0], [72.2, 9648.0], [72.3, 9659.0], [72.4, 9659.0], [72.5, 9682.0], [72.6, 9682.0], [72.7, 9708.0], [72.8, 9708.0], [72.9, 9719.0], [73.0, 9719.0], [73.1, 9737.0], [73.2, 9737.0], [73.3, 9737.0], [73.4, 9737.0], [73.5, 9767.0], [73.6, 9767.0], [73.7, 9768.0], [73.8, 9768.0], [73.9, 9777.0], [74.0, 9777.0], [74.1, 9778.0], [74.2, 9778.0], [74.3, 9819.0], [74.4, 9819.0], [74.5, 9832.0], [74.6, 9832.0], [74.7, 9855.0], [74.8, 9855.0], [74.9, 9856.0], [75.0, 9856.0], [75.1, 9859.0], [75.2, 9859.0], [75.3, 9888.0], [75.4, 9888.0], [75.5, 9894.0], [75.6, 9894.0], [75.7, 9899.0], [75.8, 9899.0], [75.9, 9924.0], [76.0, 9924.0], [76.1, 9930.0], [76.2, 9930.0], [76.3, 9964.0], [76.4, 9964.0], [76.5, 9985.0], [76.6, 9985.0], [76.7, 9988.0], [76.8, 9988.0], [76.9, 10000.0], [77.0, 10000.0], [77.1, 10004.0], [77.2, 10004.0], [77.3, 10013.0], [77.4, 10013.0], [77.5, 10027.0], [77.6, 10027.0], [77.7, 10031.0], [77.8, 10031.0], [77.9, 10090.0], [78.0, 10090.0], [78.1, 10151.0], [78.2, 10151.0], [78.3, 10176.0], [78.4, 10176.0], [78.5, 10187.0], [78.6, 10187.0], [78.7, 10191.0], [78.8, 10191.0], [78.9, 10201.0], [79.0, 10201.0], [79.1, 10226.0], [79.2, 10226.0], [79.3, 10237.0], [79.4, 10237.0], [79.5, 10259.0], [79.6, 10259.0], [79.7, 10259.0], [79.8, 10259.0], [79.9, 10263.0], [80.0, 10263.0], [80.1, 10341.0], [80.2, 10341.0], [80.3, 10356.0], [80.4, 10356.0], [80.5, 10375.0], [80.6, 10375.0], [80.7, 10383.0], [80.8, 10383.0], [80.9, 10396.0], [81.0, 10396.0], [81.1, 10477.0], [81.2, 10477.0], [81.3, 10503.0], [81.4, 10503.0], [81.5, 10543.0], [81.6, 10543.0], [81.7, 10549.0], [81.8, 10549.0], [81.9, 10556.0], [82.0, 10556.0], [82.1, 10559.0], [82.2, 10559.0], [82.3, 10559.0], [82.4, 10559.0], [82.5, 10560.0], [82.6, 10560.0], [82.7, 10561.0], [82.8, 10561.0], [82.9, 10614.0], [83.0, 10614.0], [83.1, 10627.0], [83.2, 10627.0], [83.3, 10635.0], [83.4, 10635.0], [83.5, 10708.0], [83.6, 10708.0], [83.7, 10711.0], [83.8, 10711.0], [83.9, 10758.0], [84.0, 10758.0], [84.1, 10779.0], [84.2, 10779.0], [84.3, 10801.0], [84.4, 10801.0], [84.5, 10836.0], [84.6, 10836.0], [84.7, 10853.0], [84.8, 10853.0], [84.9, 10859.0], [85.0, 10859.0], [85.1, 10988.0], [85.2, 10988.0], [85.3, 11025.0], [85.4, 11025.0], [85.5, 11047.0], [85.6, 11047.0], [85.7, 11072.0], [85.8, 11072.0], [85.9, 11084.0], [86.0, 11084.0], [86.1, 11090.0], [86.2, 11090.0], [86.3, 11118.0], [86.4, 11118.0], [86.5, 11129.0], [86.6, 11129.0], [86.7, 11149.0], [86.8, 11149.0], [86.9, 11153.0], [87.0, 11153.0], [87.1, 11292.0], [87.2, 11292.0], [87.3, 11382.0], [87.4, 11382.0], [87.5, 11395.0], [87.6, 11395.0], [87.7, 11458.0], [87.8, 11458.0], [87.9, 11535.0], [88.0, 11535.0], [88.1, 11559.0], [88.2, 11559.0], [88.3, 11639.0], [88.4, 11639.0], [88.5, 11655.0], [88.6, 11655.0], [88.7, 11715.0], [88.8, 11715.0], [88.9, 11762.0], [89.0, 11762.0], [89.1, 11765.0], [89.2, 11765.0], [89.3, 11799.0], [89.4, 11799.0], [89.5, 11821.0], [89.6, 11821.0], [89.7, 11842.0], [89.8, 11842.0], [89.9, 11844.0], [90.0, 11844.0], [90.1, 11852.0], [90.2, 11852.0], [90.3, 11854.0], [90.4, 11854.0], [90.5, 11961.0], [90.6, 11961.0], [90.7, 11987.0], [90.8, 11987.0], [90.9, 11992.0], [91.0, 11992.0], [91.1, 12029.0], [91.2, 12029.0], [91.3, 12033.0], [91.4, 12033.0], [91.5, 12057.0], [91.6, 12057.0], [91.7, 12087.0], [91.8, 12087.0], [91.9, 12103.0], [92.0, 12103.0], [92.1, 12104.0], [92.2, 12104.0], [92.3, 12107.0], [92.4, 12107.0], [92.5, 12128.0], [92.6, 12128.0], [92.7, 12158.0], [92.8, 12158.0], [92.9, 12164.0], [93.0, 12164.0], [93.1, 12168.0], [93.2, 12168.0], [93.3, 12171.0], [93.4, 12171.0], [93.5, 12178.0], [93.6, 12178.0], [93.7, 12214.0], [93.8, 12214.0], [93.9, 12274.0], [94.0, 12274.0], [94.1, 12280.0], [94.2, 12280.0], [94.3, 12414.0], [94.4, 12414.0], [94.5, 12419.0], [94.6, 12419.0], [94.7, 12422.0], [94.8, 12422.0], [94.9, 12442.0], [95.0, 12442.0], [95.1, 12794.0], [95.2, 12794.0], [95.3, 12875.0], [95.4, 12875.0], [95.5, 12895.0], [95.6, 12895.0], [95.7, 12915.0], [95.8, 12915.0], [95.9, 12918.0], [96.0, 12918.0], [96.1, 12964.0], [96.2, 12964.0], [96.3, 13176.0], [96.4, 13176.0], [96.5, 13190.0], [96.6, 13190.0], [96.7, 13218.0], [96.8, 13218.0], [96.9, 13485.0], [97.0, 13485.0], [97.1, 13572.0], [97.2, 13572.0], [97.3, 13634.0], [97.4, 13634.0], [97.5, 13691.0], [97.6, 13691.0], [97.7, 14206.0], [97.8, 14206.0], [97.9, 14238.0], [98.0, 14238.0], [98.1, 15274.0], [98.2, 15274.0], [98.3, 15312.0], [98.4, 15312.0], [98.5, 15329.0], [98.6, 15329.0], [98.7, 15331.0], [98.8, 15331.0], [98.9, 15348.0], [99.0, 15348.0], [99.1, 15377.0], [99.2, 15377.0], [99.3, 15393.0], [99.4, 15393.0], [99.5, 15483.0], [99.6, 15483.0], [99.7, 15491.0], [99.8, 15491.0], [99.9, 16314.0], [100.0, 16314.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 240.0, "series": [{"data": [[100.0, 12.0], [200.0, 4.0], [300.0, 6.0], [400.0, 26.0], [500.0, 16.0], [600.0, 19.0], [700.0, 3.0], [900.0, 2.0], [1000.0, 1.0], [1100.0, 6.0], [1200.0, 5.0], [1300.0, 4.0], [1400.0, 5.0], [1500.0, 7.0], [1700.0, 6.0], [1800.0, 2.0], [1900.0, 4.0], [2000.0, 2.0], [2100.0, 1.0], [2300.0, 2.0], [2500.0, 1.0], [2600.0, 2.0], [2800.0, 1.0], [2900.0, 1.0], [3000.0, 1.0], [3300.0, 3.0], [3200.0, 4.0], [3500.0, 3.0], [3700.0, 3.0], [3600.0, 2.0], [3800.0, 4.0], [3900.0, 2.0], [4000.0, 2.0], [4300.0, 7.0], [4200.0, 3.0], [4100.0, 2.0], [4400.0, 4.0], [4600.0, 4.0], [4500.0, 2.0], [4800.0, 6.0], [4700.0, 6.0], [5000.0, 9.0], [4900.0, 13.0], [5100.0, 4.0], [5300.0, 1.0], [5200.0, 4.0], [5600.0, 3.0], [5400.0, 1.0], [5800.0, 3.0], [6100.0, 4.0], [5900.0, 4.0], [6000.0, 2.0], [6200.0, 2.0], [6600.0, 5.0], [6500.0, 5.0], [6700.0, 7.0], [6800.0, 3.0], [6900.0, 1.0], [7100.0, 5.0], [7000.0, 2.0], [7200.0, 2.0], [7300.0, 8.0], [7400.0, 5.0], [7600.0, 3.0], [7700.0, 6.0], [7900.0, 4.0], [7800.0, 3.0], [8100.0, 5.0], [8000.0, 1.0], [8400.0, 3.0], [8500.0, 4.0], [8300.0, 5.0], [8200.0, 4.0], [8600.0, 3.0], [8700.0, 3.0], [9100.0, 8.0], [9000.0, 3.0], [9200.0, 5.0], [8800.0, 3.0], [8900.0, 3.0], [9300.0, 9.0], [9400.0, 9.0], [9500.0, 10.0], [9700.0, 5.0], [9600.0, 6.0], [9800.0, 4.0], [10000.0, 6.0], [10200.0, 3.0], [10100.0, 5.0], [9900.0, 2.0], [10300.0, 3.0], [10500.0, 3.0], [10600.0, 3.0], [10700.0, 5.0], [10400.0, 6.0], [11000.0, 7.0], [11100.0, 2.0], [11200.0, 2.0], [10900.0, 4.0], [10800.0, 1.0], [11400.0, 3.0], [11500.0, 2.0], [11600.0, 4.0], [11700.0, 7.0], [11300.0, 1.0], [11900.0, 3.0], [11800.0, 2.0], [12000.0, 5.0], [12200.0, 2.0], [12100.0, 2.0], [12300.0, 6.0], [12400.0, 1.0], [12500.0, 1.0], [12600.0, 1.0], [13200.0, 1.0], [13100.0, 2.0], [12800.0, 1.0], [13500.0, 1.0], [13800.0, 1.0], [13400.0, 1.0], [13900.0, 1.0], [14800.0, 2.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 240.0], [600.0, 16.0], [700.0, 1.0], [800.0, 10.0], [15200.0, 3.0], [15100.0, 4.0], [15300.0, 1.0], [1000.0, 1.0], [1100.0, 2.0], [1200.0, 4.0], [1300.0, 1.0], [1400.0, 12.0], [1500.0, 13.0], [100.0, 77.0], [1600.0, 21.0], [1700.0, 7.0], [1800.0, 1.0], [1900.0, 11.0], [2900.0, 4.0], [200.0, 7.0], [3200.0, 4.0], [3400.0, 4.0], [3500.0, 6.0], [4500.0, 2.0], [300.0, 9.0], [400.0, 14.0], [7200.0, 4.0], [7300.0, 1.0], [500.0, 20.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1100.0, 1.0], [1200.0, 1.0], [1300.0, 8.0], [1400.0, 3.0], [1500.0, 1.0], [1600.0, 3.0], [1700.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 15.0], [2100.0, 23.0], [2200.0, 15.0], [2300.0, 3.0], [2400.0, 4.0], [2600.0, 2.0], [2700.0, 4.0], [2800.0, 2.0], [2900.0, 4.0], [3000.0, 3.0], [3100.0, 4.0], [3200.0, 3.0], [3400.0, 2.0], [3600.0, 9.0], [3700.0, 6.0], [3800.0, 2.0], [3900.0, 7.0], [4000.0, 2.0], [4100.0, 5.0], [4300.0, 2.0], [4200.0, 5.0], [4400.0, 7.0], [4500.0, 3.0], [4600.0, 5.0], [4800.0, 8.0], [4700.0, 7.0], [5100.0, 9.0], [5000.0, 16.0], [4900.0, 8.0], [5300.0, 3.0], [5200.0, 3.0], [5400.0, 2.0], [5500.0, 1.0], [5700.0, 1.0], [5800.0, 2.0], [5900.0, 3.0], [6000.0, 4.0], [6100.0, 2.0], [6300.0, 2.0], [6200.0, 4.0], [6600.0, 5.0], [6700.0, 7.0], [6800.0, 4.0], [6900.0, 4.0], [7100.0, 2.0], [7000.0, 1.0], [7300.0, 5.0], [7400.0, 9.0], [7200.0, 5.0], [7500.0, 4.0], [7900.0, 3.0], [7700.0, 4.0], [7800.0, 4.0], [8000.0, 5.0], [8200.0, 7.0], [8400.0, 5.0], [8300.0, 5.0], [8500.0, 2.0], [8700.0, 4.0], [8600.0, 3.0], [8900.0, 4.0], [9000.0, 3.0], [9100.0, 4.0], [9200.0, 5.0], [8800.0, 3.0], [9700.0, 8.0], [9400.0, 7.0], [9500.0, 5.0], [9600.0, 8.0], [9300.0, 3.0], [9800.0, 8.0], [9900.0, 5.0], [10000.0, 6.0], [10100.0, 4.0], [10200.0, 6.0], [10300.0, 5.0], [10500.0, 8.0], [10600.0, 3.0], [10700.0, 4.0], [10400.0, 1.0], [11100.0, 4.0], [11000.0, 5.0], [10800.0, 4.0], [11200.0, 1.0], [10900.0, 1.0], [11300.0, 2.0], [11500.0, 2.0], [11600.0, 2.0], [11400.0, 1.0], [11700.0, 4.0], [11800.0, 5.0], [12100.0, 9.0], [12200.0, 3.0], [11900.0, 3.0], [12000.0, 4.0], [12700.0, 1.0], [12400.0, 4.0], [12800.0, 2.0], [12900.0, 3.0], [13100.0, 2.0], [13200.0, 1.0], [13600.0, 2.0], [13500.0, 1.0], [13400.0, 1.0], [14200.0, 2.0], [15300.0, 6.0], [15200.0, 1.0], [15400.0, 2.0], [16300.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 16300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 141.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 964.0, "series": [{"data": [[0.0, 395.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 141.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 964.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.625, "minX": 1.72427484E12, "maxY": 236.16778975741252, "series": [{"data": [[1.7242749E12, 4.625], [1.72427484E12, 236.16778975741252]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7242749E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 73.0, "minX": 1.0, "maxY": 16314.0, "series": [{"data": [[2.0, 155.0], [3.0, 158.0], [4.0, 155.0], [5.0, 132.0], [6.0, 130.0], [8.0, 148.5], [9.0, 11638.0], [10.0, 1148.0], [11.0, 139.0], [12.0, 142.0], [13.0, 127.0], [14.0, 131.0], [15.0, 10996.0], [16.0, 14837.0], [17.0, 14838.0], [18.0, 9026.0], [19.0, 12831.0], [20.0, 1236.0], [21.0, 7903.0], [22.0, 13401.0], [23.0, 13957.0], [24.0, 10150.0], [25.0, 10897.0], [26.0, 11051.0], [28.0, 11415.0], [29.0, 11473.0], [30.0, 13140.0], [32.0, 12912.0], [35.0, 10623.0], [34.0, 12739.5], [37.0, 7720.0], [36.0, 12337.0], [38.0, 10768.0], [41.0, 3274.0], [40.0, 10362.0], [43.0, 1312.0], [42.0, 7481.0], [45.0, 9363.0], [44.0, 10138.0], [47.0, 1188.0], [46.0, 10464.0], [49.0, 9938.0], [48.0, 13160.0], [51.0, 7148.0], [50.0, 13286.0], [53.0, 7052.0], [52.0, 10001.0], [55.0, 3292.0], [54.0, 151.0], [57.0, 3275.0], [56.0, 3301.0], [59.0, 3375.0], [58.0, 8708.0], [61.0, 11555.0], [60.0, 3280.0], [63.0, 7033.5], [67.0, 406.0], [66.0, 403.0], [65.0, 724.0], [64.0, 422.0], [71.0, 685.0], [70.0, 696.0], [69.0, 1725.0], [68.0, 727.0], [75.0, 11754.0], [74.0, 10538.0], [73.0, 9646.0], [72.0, 676.0], [79.0, 11631.0], [78.0, 12126.0], [77.0, 9768.0], [76.0, 11207.0], [83.0, 10775.0], [82.0, 9610.0], [81.0, 8822.0], [80.0, 8920.0], [87.0, 12326.0], [86.0, 10469.0], [85.0, 10465.0], [84.0, 10097.0], [91.0, 9840.0], [90.0, 9796.0], [89.0, 9808.0], [88.0, 11764.0], [95.0, 9367.0], [94.0, 9399.0], [93.0, 12075.0], [92.0, 11300.0], [99.0, 10055.0], [98.0, 8549.0], [97.0, 12021.0], [96.0, 6945.0], [103.0, 6520.0], [102.0, 10993.0], [101.0, 12630.0], [100.0, 8808.0], [107.0, 12585.0], [106.0, 8528.0], [105.0, 11042.0], [104.0, 8744.0], [111.0, 9686.0], [110.0, 12331.0], [109.0, 7651.0], [108.0, 9750.0], [115.0, 664.0], [114.0, 1753.0], [113.0, 12312.0], [112.0, 11738.0], [119.0, 11027.0], [118.0, 645.0], [117.0, 650.0], [116.0, 659.0], [123.0, 10523.0], [122.0, 9288.0], [121.0, 10962.0], [120.0, 9266.0], [127.0, 6710.0], [126.0, 12368.0], [125.0, 11712.0], [124.0, 12168.0], [135.0, 8382.0], [134.0, 12291.0], [133.0, 9133.0], [132.0, 504.0], [131.0, 8991.0], [130.0, 12411.0], [129.0, 10386.0], [128.0, 11948.0], [143.0, 9673.0], [142.0, 12027.0], [141.0, 497.0], [140.0, 12226.0], [139.0, 9551.0], [138.0, 3738.0], [137.0, 12391.0], [136.0, 9241.0], [151.0, 8537.0], [150.0, 8310.0], [149.0, 475.0], [148.0, 9536.0], [147.0, 489.0], [146.0, 11767.0], [145.0, 10178.0], [144.0, 12075.0], [159.0, 9526.0], [158.0, 9594.0], [157.0, 9535.0], [156.0, 9636.0], [155.0, 9688.0], [154.0, 8217.0], [153.0, 10310.0], [152.0, 11876.0], [167.0, 9160.0], [166.0, 11955.0], [165.0, 8429.0], [164.0, 10266.0], [163.0, 10751.0], [162.0, 9583.0], [161.0, 10709.0], [160.0, 9539.0], [175.0, 1321.0], [174.0, 1231.0], [172.0, 7744.0], [171.0, 1309.0], [170.0, 9325.0], [169.0, 9436.0], [168.0, 9419.0], [183.0, 10737.0], [181.0, 11704.0], [180.0, 1264.0], [179.0, 11792.0], [178.0, 10169.0], [177.0, 11642.0], [176.0, 1157.0], [191.0, 10089.0], [190.0, 11482.0], [189.0, 11484.0], [188.0, 8619.0], [187.0, 9689.5], [185.0, 9396.0], [184.0, 11552.0], [199.0, 296.0], [198.0, 302.0], [197.0, 1198.0], [196.0, 7377.0], [195.0, 11003.0], [194.0, 1294.0], [193.0, 8900.0], [192.0, 5287.0], [207.0, 11299.0], [206.0, 296.0], [205.0, 308.0], [204.0, 295.0], [203.0, 310.0], [202.0, 305.0], [201.0, 289.0], [200.0, 302.0], [215.0, 401.0], [214.0, 5267.0], [213.0, 416.0], [212.0, 418.0], [211.0, 10614.0], [210.0, 1472.0], [209.0, 10475.0], [208.0, 333.0], [223.0, 10700.0], [222.0, 1250.0], [221.0, 11096.0], [220.0, 10265.0], [218.0, 5253.0], [217.0, 9212.0], [216.0, 4989.0], [230.0, 472.0], [229.0, 1537.0], [228.0, 1537.0], [227.0, 475.0], [226.0, 475.0], [225.0, 464.0], [224.0, 456.0], [239.0, 490.0], [238.0, 5297.0], [236.0, 7786.0], [235.0, 488.0], [234.0, 488.0], [233.0, 1545.0], [232.0, 1014.0], [247.0, 457.0], [246.0, 456.0], [245.0, 11082.0], [244.0, 477.0], [243.0, 481.0], [241.0, 5826.5], [255.0, 4892.0], [254.0, 4944.0], [253.0, 1471.0], [252.0, 1472.0], [251.0, 1457.0], [250.0, 1468.0], [249.0, 11076.0], [248.0, 460.0], [270.0, 8167.0], [271.0, 4327.0], [269.0, 4354.0], [268.0, 637.5], [266.0, 635.0], [265.0, 595.0], [264.0, 600.0], [263.0, 644.0], [257.0, 614.0], [256.0, 620.0], [259.0, 615.0], [258.0, 600.0], [262.0, 603.0], [261.0, 605.0], [260.0, 607.0], [286.0, 10324.0], [287.0, 8752.0], [285.0, 5899.0], [284.0, 10508.0], [283.0, 5103.0], [282.0, 8862.0], [281.0, 5974.0], [280.0, 8390.0], [279.0, 5106.0], [273.0, 10646.0], [272.0, 2329.0], [275.0, 1898.0], [274.0, 1907.0], [278.0, 6120.0], [277.0, 10273.0], [276.0, 708.0], [302.0, 6067.0], [303.0, 6698.0], [301.0, 4867.0], [300.0, 8692.0], [299.0, 8658.0], [298.0, 6123.0], [297.0, 4988.0], [295.0, 4914.0], [289.0, 5010.0], [288.0, 4954.0], [291.0, 6110.0], [290.0, 5941.0], [294.0, 1795.0], [293.0, 1776.0], [292.0, 5886.0], [318.0, 577.0], [319.0, 9528.0], [317.0, 536.0], [316.0, 571.0], [315.0, 576.0], [314.0, 558.0], [313.0, 545.0], [312.0, 545.0], [311.0, 558.0], [304.0, 6016.0], [307.0, 6924.5], [306.0, 5975.0], [310.0, 546.0], [309.0, 552.0], [308.0, 560.0], [334.0, 9120.0], [335.0, 9813.0], [333.0, 10057.0], [332.0, 10045.0], [331.0, 8126.0], [330.0, 4958.0], [329.0, 9421.0], [328.0, 6681.0], [327.0, 9881.0], [321.0, 539.0], [320.0, 9112.0], [323.0, 578.0], [322.0, 563.0], [326.0, 5155.0], [325.0, 4908.0], [324.0, 6799.0], [350.0, 4971.888888888889], [351.0, 5606.375], [349.0, 6321.0], [348.0, 7056.75], [347.0, 6119.5], [346.0, 3506.0], [345.0, 8367.0], [344.0, 4435.0], [343.0, 9717.0], [336.0, 4261.0], [339.0, 7453.0], [338.0, 6339.0], [342.0, 4466.0], [341.0, 3694.0], [340.0, 7766.0], [366.0, 6667.0], [367.0, 6346.333333333333], [365.0, 6886.0], [364.0, 2905.5], [363.0, 6294.5], [362.0, 5050.333333333333], [361.0, 5630.666666666667], [360.0, 4975.4], [359.0, 3795.6666666666665], [353.0, 5124.857142857143], [352.0, 5160.142857142858], [355.0, 3767.75], [354.0, 3593.25], [358.0, 6805.5], [357.0, 5721.75], [356.0, 4583.428571428572], [370.0, 6636.5], [377.0, 2680.0], [379.0, 7058.5], [378.0, 9412.0], [376.0, 5480.5], [375.0, 8078.0], [374.0, 5649.5], [373.0, 6501.5], [372.0, 4706.0], [371.0, 4817.5], [369.0, 6620.0], [368.0, 4367.333333333333], [380.0, 6783.0], [383.0, 4794.0], [382.0, 5154.0], [381.0, 7180.0], [398.0, 7186.0], [399.0, 6968.5], [397.0, 7461.0], [396.0, 7861.0], [395.0, 4965.0], [394.0, 8258.0], [393.0, 9240.0], [392.0, 6436.5], [391.0, 5787.0], [385.0, 4964.0], [384.0, 9443.0], [387.0, 4734.0], [386.0, 4917.0], [390.0, 7697.0], [389.0, 4910.0], [388.0, 9388.0], [408.0, 9009.0], [407.0, 5463.0], [405.0, 5790.0], [410.0, 4941.333333333333], [411.0, 9155.0], [409.0, 4680.0], [406.0, 8127.0], [404.0, 5456.0], [403.0, 9026.0], [402.0, 3079.0], [401.0, 9185.0], [400.0, 4005.0], [1.0, 1142.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[233.698, 6146.573999999999]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 15175.0], [3.0, 15323.0], [4.0, 15173.0], [5.0, 15214.0], [6.0, 15142.0], [8.0, 15235.0], [9.0, 127.0], [10.0, 7269.0], [11.0, 7236.0], [12.0, 7280.0], [13.0, 7351.0], [14.0, 7264.0], [15.0, 87.0], [16.0, 653.0], [17.0, 459.0], [18.0, 140.0], [19.0, 86.0], [20.0, 3572.0], [21.0, 135.0], [22.0, 84.0], [23.0, 252.0], [24.0, 86.0], [25.0, 91.0], [26.0, 97.0], [28.0, 90.5], [29.0, 86.0], [30.0, 78.0], [32.0, 233.5], [35.0, 87.0], [34.0, 91.5], [37.0, 121.0], [36.0, 85.0], [38.0, 85.0], [41.0, 1499.0], [40.0, 103.5], [43.0, 3499.0], [42.0, 109.0], [45.0, 108.0], [44.0, 87.0], [47.0, 3501.0], [46.0, 97.0], [49.0, 92.0], [48.0, 411.0], [51.0, 111.0], [50.0, 405.0], [53.0, 142.0], [52.0, 89.0], [55.0, 650.0], [54.0, 3589.0], [57.0, 649.0], [56.0, 1677.0], [59.0, 1642.0], [58.0, 85.0], [61.0, 83.0], [60.0, 1714.0], [63.0, 554.5], [67.0, 3559.0], [66.0, 4574.0], [65.0, 3489.0], [64.0, 4574.0], [71.0, 3470.0], [70.0, 3518.0], [69.0, 1940.0], [68.0, 3497.0], [75.0, 88.0], [74.0, 88.0], [73.0, 91.0], [72.0, 3510.0], [79.0, 84.0], [78.0, 87.0], [77.0, 87.0], [76.0, 85.0], [83.0, 84.0], [82.0, 98.0], [81.0, 103.0], [80.0, 85.0], [87.0, 87.0], [86.0, 80.0], [85.0, 94.0], [84.0, 93.0], [91.0, 84.0], [90.0, 91.0], [89.0, 91.0], [88.0, 80.0], [95.0, 93.0], [94.0, 81.0], [93.0, 83.0], [92.0, 81.0], [99.0, 96.0], [98.0, 92.0], [97.0, 82.0], [96.0, 128.0], [103.0, 97.0], [102.0, 78.0], [101.0, 560.0], [100.0, 90.0], [107.0, 590.0], [106.0, 76.0], [105.0, 86.0], [104.0, 108.0], [111.0, 91.0], [110.0, 111.0], [109.0, 123.0], [108.0, 81.0], [115.0, 2963.0], [114.0, 1736.0], [113.0, 107.0], [112.0, 82.0], [119.0, 91.0], [118.0, 2962.0], [117.0, 2969.0], [116.0, 2956.0], [123.0, 91.0], [122.0, 82.0], [121.0, 84.0], [120.0, 81.0], [127.0, 131.0], [126.0, 595.0], [125.0, 86.0], [124.0, 106.0], [135.0, 90.0], [134.0, 503.0], [133.0, 81.0], [132.0, 3274.0], [131.0, 98.0], [130.0, 501.0], [129.0, 90.0], [128.0, 84.0], [143.0, 94.0], [142.0, 100.0], [141.0, 3274.0], [140.0, 647.0], [139.0, 96.0], [138.0, 465.0], [137.0, 457.0], [136.0, 85.0], [151.0, 84.0], [150.0, 83.0], [149.0, 3231.0], [148.0, 86.0], [147.0, 3243.0], [146.0, 85.0], [145.0, 85.0], [144.0, 102.0], [159.0, 89.0], [158.0, 88.0], [157.0, 84.0], [156.0, 83.0], [155.0, 90.0], [154.0, 84.0], [153.0, 86.0], [152.0, 84.0], [167.0, 85.0], [166.0, 101.0], [165.0, 104.0], [164.0, 89.0], [163.0, 85.0], [162.0, 73.0], [161.0, 91.0], [160.0, 79.0], [175.0, 1638.0], [174.0, 1615.5], [172.0, 86.0], [171.0, 1625.0], [170.0, 108.0], [169.0, 93.0], [168.0, 84.0], [183.0, 273.0], [181.0, 458.0], [180.0, 1627.0], [179.0, 453.0], [178.0, 90.0], [177.0, 350.0], [176.0, 1656.0], [191.0, 86.0], [190.0, 620.0], [189.0, 621.0], [188.0, 88.0], [187.0, 84.5], [185.0, 84.0], [184.0, 614.0], [199.0, 1955.0], [198.0, 1980.0], [197.0, 1466.0], [196.0, 88.0], [195.0, 87.0], [194.0, 1480.0], [193.0, 87.0], [192.0, 115.0], [207.0, 555.0], [206.0, 1977.0], [205.0, 1928.0], [204.0, 1912.0], [203.0, 1976.0], [202.0, 1904.0], [201.0, 1962.0], [200.0, 1904.0], [215.0, 1752.0], [214.0, 107.0], [213.0, 1720.0], [212.0, 1752.0], [211.0, 93.0], [210.0, 875.0], [209.0, 84.0], [208.0, 1852.0], [223.0, 78.0], [222.0, 1113.0], [221.0, 361.0], [220.0, 371.0], [218.0, 94.0], [217.0, 80.0], [216.0, 108.0], [230.0, 1536.0], [229.0, 656.0], [228.0, 1661.0], [227.0, 1666.0], [226.0, 1567.0], [225.0, 1699.0], [224.0, 1719.0], [239.0, 1643.0], [238.0, 810.0], [236.0, 78.0], [235.0, 1555.0], [234.0, 1299.0], [233.0, 639.0], [232.0, 1646.5], [247.0, 1592.0], [246.0, 1279.0], [245.0, 452.0], [244.0, 1584.0], [243.0, 1615.0], [241.0, 1112.0], [255.0, 103.0], [254.0, 110.0], [253.0, 1621.0], [252.0, 638.0], [251.0, 1615.0], [250.0, 1654.0], [249.0, 274.0], [248.0, 1582.0], [270.0, 81.0], [271.0, 112.0], [269.0, 184.0], [268.0, 1478.0], [266.0, 1478.0], [265.0, 1476.0], [264.0, 1400.0], [263.0, 1469.0], [257.0, 1437.0], [256.0, 1444.0], [259.0, 1532.0], [258.0, 1426.0], [262.0, 1516.0], [261.0, 1550.0], [260.0, 1549.0], [286.0, 310.0], [287.0, 86.0], [285.0, 87.0], [284.0, 248.0], [283.0, 101.0], [282.0, 93.0], [281.0, 99.0], [280.0, 86.0], [279.0, 86.0], [273.0, 506.0], [272.0, 1315.0], [275.0, 518.0], [274.0, 547.0], [278.0, 87.0], [277.0, 110.0], [276.0, 880.0], [302.0, 83.0], [303.0, 87.0], [301.0, 136.0], [300.0, 85.0], [299.0, 89.0], [298.0, 83.0], [297.0, 120.5], [295.0, 99.0], [289.0, 113.0], [288.0, 90.0], [291.0, 91.0], [290.0, 86.0], [294.0, 513.0], [293.0, 513.0], [292.0, 91.0], [318.0, 815.0], [319.0, 86.0], [317.0, 843.0], [316.0, 823.0], [315.0, 820.0], [314.0, 1668.0], [313.0, 856.0], [312.0, 1693.0], [311.0, 1900.0], [304.0, 88.0], [307.0, 89.0], [306.0, 83.0], [310.0, 1696.0], [309.0, 862.0], [308.0, 868.0], [334.0, 95.0], [335.0, 525.0], [333.0, 438.0], [332.0, 512.0], [331.0, 87.0], [330.0, 95.0], [329.0, 83.0], [328.0, 112.0], [327.0, 107.0], [321.0, 1656.0], [320.0, 86.0], [323.0, 792.0], [322.0, 811.0], [326.0, 95.0], [325.0, 100.0], [324.0, 123.0], [350.0, 129.44444444444443], [351.0, 168.125], [349.0, 214.75], [348.0, 137.5], [347.0, 84.5], [346.0, 99.0], [345.0, 87.0], [344.0, 118.0], [343.0, 539.0], [336.0, 93.0], [339.0, 86.0], [338.0, 89.5], [342.0, 150.0], [341.0, 86.0], [340.0, 85.0], [366.0, 240.5], [367.0, 87.33333333333333], [365.0, 101.5], [364.0, 136.0], [363.0, 85.5], [362.0, 89.66666666666667], [361.0, 92.33333333333333], [360.0, 301.4], [359.0, 109.0], [353.0, 163.71428571428572], [352.0, 100.57142857142857], [355.0, 431.25], [354.0, 377.25], [358.0, 189.5], [357.0, 99.0], [356.0, 99.0], [370.0, 324.0], [377.0, 217.5], [379.0, 356.5], [378.0, 614.0], [376.0, 89.0], [375.0, 212.0], [374.0, 125.0], [373.0, 93.0], [372.0, 80.5], [371.0, 95.0], [369.0, 103.0], [368.0, 150.33333333333334], [380.0, 359.5], [383.0, 86.0], [382.0, 85.0], [381.0, 79.0], [398.0, 83.0], [399.0, 207.0], [397.0, 89.0], [396.0, 84.0], [395.0, 88.0], [394.0, 88.0], [393.0, 615.0], [392.0, 81.0], [391.0, 94.5], [385.0, 83.0], [384.0, 519.0], [387.0, 84.0], [386.0, 88.0], [390.0, 89.0], [389.0, 80.0], [388.0, 540.0], [408.0, 109.0], [407.0, 213.0], [405.0, 84.0], [410.0, 94.33333333333333], [411.0, 582.0], [409.0, 88.0], [406.0, 86.0], [404.0, 88.0], [403.0, 103.0], [402.0, 109.0], [401.0, 633.0], [400.0, 127.0], [1.0, 15170.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[233.698, 832.3199999999997]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 15331.0], [3.0, 15483.0], [4.0, 15329.0], [5.0, 15348.0], [6.0, 15274.0], [8.0, 15385.0], [9.0, 11765.0], [10.0, 8419.0], [11.0, 7377.0], [12.0, 7425.0], [13.0, 7480.0], [14.0, 7397.0], [15.0, 11084.0], [16.0, 15491.0], [17.0, 15312.0], [18.0, 9166.0], [19.0, 12918.0], [20.0, 4809.0], [21.0, 8038.0], [22.0, 13485.0], [23.0, 14238.0], [24.0, 10237.0], [25.0, 10988.0], [26.0, 11149.0], [28.0, 11506.0], [29.0, 11559.0], [30.0, 13218.0], [32.0, 13146.5], [35.0, 10711.0], [34.0, 12831.5], [37.0, 7842.0], [36.0, 12422.0], [38.0, 10853.0], [41.0, 4773.0], [40.0, 10465.5], [43.0, 4811.0], [42.0, 7590.0], [45.0, 9471.0], [44.0, 10226.0], [47.0, 4689.0], [46.0, 10561.0], [49.0, 10031.0], [48.0, 13572.0], [51.0, 7260.0], [50.0, 13691.0], [53.0, 7195.0], [52.0, 10090.0], [55.0, 3943.0], [54.0, 3741.0], [57.0, 3924.0], [56.0, 4979.0], [59.0, 5017.0], [58.0, 8794.0], [61.0, 11639.0], [60.0, 4994.0], [63.0, 7588.0], [67.0, 3965.0], [66.0, 4977.0], [65.0, 4214.0], [64.0, 4997.0], [71.0, 4155.0], [70.0, 4214.0], [69.0, 3666.0], [68.0, 4224.0], [75.0, 11842.0], [74.0, 10627.0], [73.0, 9737.0], [72.0, 4186.0], [79.0, 11715.0], [78.0, 12214.0], [77.0, 9855.0], [76.0, 11292.0], [83.0, 10859.0], [82.0, 9708.0], [81.0, 8926.0], [80.0, 9005.0], [87.0, 12414.0], [86.0, 10549.0], [85.0, 10559.0], [84.0, 10191.0], [91.0, 9924.0], [90.0, 9888.0], [89.0, 9899.0], [88.0, 11844.0], [95.0, 9460.0], [94.0, 9481.0], [93.0, 12158.0], [92.0, 11382.0], [99.0, 10151.0], [98.0, 8641.0], [97.0, 12103.0], [96.0, 7073.0], [103.0, 6617.0], [102.0, 11072.0], [101.0, 13190.0], [100.0, 8898.0], [107.0, 13176.0], [106.0, 8605.0], [105.0, 11129.0], [104.0, 8853.0], [111.0, 9777.0], [110.0, 12442.0], [109.0, 7775.0], [108.0, 9832.0], [115.0, 3629.0], [114.0, 3489.0], [113.0, 12419.0], [112.0, 11821.0], [119.0, 11118.0], [118.0, 3607.0], [117.0, 3619.0], [116.0, 3615.0], [123.0, 10614.0], [122.0, 9370.0], [121.0, 11047.0], [120.0, 9348.0], [127.0, 6842.0], [126.0, 12964.0], [125.0, 11799.0], [124.0, 12274.0], [135.0, 8473.0], [134.0, 12794.0], [133.0, 9214.0], [132.0, 3778.0], [131.0, 9090.0], [130.0, 12915.0], [129.0, 10477.0], [128.0, 12033.0], [143.0, 9767.0], [142.0, 12128.0], [141.0, 3772.0], [140.0, 12875.0], [139.0, 9648.0], [138.0, 4203.0], [137.0, 12895.0], [136.0, 9326.0], [151.0, 8622.0], [150.0, 8394.0], [149.0, 3706.0], [148.0, 9623.0], [147.0, 3733.0], [146.0, 11852.0], [145.0, 10263.0], [144.0, 12178.0], [159.0, 9615.0], [158.0, 9682.0], [157.0, 9620.0], [156.0, 9719.0], [155.0, 9778.0], [154.0, 8301.0], [153.0, 10396.0], [152.0, 11961.0], [167.0, 9245.0], [166.0, 12057.0], [165.0, 8533.0], [164.0, 10356.0], [163.0, 10836.0], [162.0, 9659.0], [161.0, 10801.0], [160.0, 9618.0], [175.0, 2959.0], [174.0, 2846.5], [172.0, 7830.0], [171.0, 2934.0], [170.0, 9433.0], [169.0, 9530.0], [168.0, 9505.0], [183.0, 11015.0], [181.0, 12164.0], [180.0, 2892.0], [179.0, 12280.0], [178.0, 10259.0], [177.0, 11992.0], [176.0, 2813.0], [191.0, 10176.0], [190.0, 12104.0], [189.0, 12107.0], [188.0, 8707.0], [187.0, 9774.5], [185.0, 9481.0], [184.0, 12168.0], [199.0, 2251.0], [198.0, 2282.0], [197.0, 2665.0], [196.0, 7465.0], [195.0, 11090.0], [194.0, 2774.0], [193.0, 8987.0], [192.0, 5402.0], [207.0, 11854.0], [206.0, 2273.0], [205.0, 2236.0], [204.0, 2208.0], [203.0, 2286.0], [202.0, 2209.0], [201.0, 2251.0], [200.0, 2207.0], [215.0, 2153.0], [214.0, 5375.0], [213.0, 2137.0], [212.0, 2170.0], [211.0, 10708.0], [210.0, 2347.0], [209.0, 10560.0], [208.0, 2185.0], [223.0, 10779.0], [222.0, 2363.0], [221.0, 11458.0], [220.0, 10636.5], [218.0, 5347.0], [217.0, 9292.0], [216.0, 5098.0], [230.0, 2009.0], [229.0, 2193.0], [228.0, 3199.0], [227.0, 2141.0], [226.0, 2042.0], [225.0, 2164.0], [224.0, 2176.0], [239.0, 2134.0], [238.0, 6108.0], [236.0, 7864.0], [235.0, 2044.0], [234.0, 1787.0], [233.0, 2185.0], [232.0, 2660.5], [247.0, 2049.0], [246.0, 1735.0], [245.0, 11535.0], [244.0, 2062.0], [243.0, 2097.0], [241.0, 6960.0], [255.0, 4996.0], [254.0, 5055.0], [253.0, 3096.0], [252.0, 2110.0], [251.0, 3073.0], [250.0, 3122.0], [249.0, 11395.0], [248.0, 2043.0], [270.0, 8249.0], [271.0, 4440.0], [269.0, 4538.0], [268.0, 2116.0], [266.0, 2114.0], [265.0, 2071.0], [264.0, 2000.0], [263.0, 2114.0], [257.0, 2051.0], [256.0, 2064.0], [259.0, 2147.0], [258.0, 2026.0], [262.0, 2119.0], [261.0, 2155.0], [260.0, 2157.0], [286.0, 10635.0], [287.0, 8839.0], [285.0, 5986.0], [284.0, 10758.0], [283.0, 5204.0], [282.0, 8956.0], [281.0, 6073.0], [280.0, 8477.0], [279.0, 5193.0], [273.0, 11153.0], [272.0, 3644.0], [275.0, 2416.0], [274.0, 2454.0], [278.0, 6208.0], [277.0, 10383.0], [276.0, 1588.0], [302.0, 6151.0], [303.0, 6786.0], [301.0, 5003.0], [300.0, 8777.0], [299.0, 8747.0], [298.0, 6207.0], [297.0, 5109.0], [295.0, 5014.0], [289.0, 5123.0], [288.0, 5045.0], [291.0, 6201.0], [290.0, 6027.0], [294.0, 2308.0], [293.0, 2290.0], [292.0, 5977.0], [318.0, 1392.0], [319.0, 9614.0], [317.0, 1380.0], [316.0, 1394.0], [315.0, 1396.0], [314.0, 2227.0], [313.0, 1401.0], [312.0, 2239.0], [311.0, 2459.0], [304.0, 6104.0], [307.0, 7014.0], [306.0, 6058.0], [310.0, 2242.0], [309.0, 1414.0], [308.0, 1429.0], [334.0, 9216.0], [335.0, 10341.0], [333.0, 10543.0], [332.0, 10559.0], [331.0, 8215.0], [330.0, 5054.0], [329.0, 9504.0], [328.0, 6793.0], [327.0, 9988.0], [321.0, 2195.0], [320.0, 9199.0], [323.0, 1370.0], [322.0, 1374.0], [326.0, 5250.0], [325.0, 5008.0], [324.0, 6923.0], [350.0, 5101.777777777777], [351.0, 5775.0], [349.0, 6536.75], [348.0, 7194.5], [347.0, 6204.5], [346.0, 3606.0], [345.0, 8455.0], [344.0, 4554.0], [343.0, 10259.0], [336.0, 4354.0], [339.0, 7539.0], [338.0, 6429.0], [342.0, 4617.0], [341.0, 3780.0], [340.0, 7851.0], [366.0, 6908.0], [367.0, 6434.0], [365.0, 6988.0], [364.0, 3042.0], [363.0, 6381.0], [362.0, 5140.666666666667], [361.0, 5723.333333333333], [360.0, 5277.4], [359.0, 3905.0], [353.0, 5289.857142857143], [352.0, 5261.285714285714], [355.0, 4199.75], [354.0, 3971.0], [358.0, 6995.0], [357.0, 5820.75], [356.0, 4682.714285714285], [370.0, 6961.0], [377.0, 2898.0], [379.0, 7415.5], [378.0, 10027.0], [376.0, 5570.5], [375.0, 8291.0], [374.0, 5775.0], [373.0, 6595.0], [372.0, 4787.0], [371.0, 4913.5], [369.0, 6723.0], [368.0, 4518.333333333333], [380.0, 7143.5], [383.0, 4881.0], [382.0, 5239.0], [381.0, 7260.0], [398.0, 7270.0], [399.0, 7176.0], [397.0, 7550.0], [396.0, 7946.0], [395.0, 5054.0], [394.0, 8347.0], [393.0, 9856.0], [392.0, 6518.0], [391.0, 5882.0], [385.0, 5047.0], [384.0, 9964.0], [387.0, 4818.0], [386.0, 5005.0], [390.0, 7787.0], [389.0, 4990.0], [388.0, 9930.0], [408.0, 9119.0], [407.0, 5676.5], [405.0, 5874.0], [410.0, 5035.666666666667], [411.0, 9737.0], [409.0, 4768.0], [406.0, 8213.0], [404.0, 5545.0], [403.0, 9129.0], [402.0, 3188.0], [401.0, 9819.0], [400.0, 4132.0], [1.0, 16314.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[233.698, 6979.985999999999]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 411.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 57.2, "minX": 1.72427484E12, "maxY": 148112.36666666667, "series": [{"data": [[1.7242749E12, 2310.4], [1.72427484E12, 148112.36666666667]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7242749E12, 57.2], [1.72427484E12, 4709.466666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7242749E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 271.125, "minX": 1.72427484E12, "maxY": 15481.125, "series": [{"data": [[1.7242749E12, 271.125], [1.72427484E12, 6242.109756097558]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72427484E12, 832.3199999999997]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7242749E12, 15481.125], [1.72427484E12, 6841.756097560976]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7242749E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 269.625, "minX": 1.72427484E12, "maxY": 15208.374999999998, "series": [{"data": [[1.7242749E12, 269.625], [1.72427484E12, 6123.758130081301]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72427484E12, 831.7159999999999]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7242749E12, 15208.374999999998], [1.72427484E12, 597.9491869918699]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7242749E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 219.625, "minX": 1.72427484E12, "maxY": 15147.125, "series": [{"data": [[1.7242749E12, 219.625], [1.72427484E12, 5196.2174796748]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.72427484E12, 640.2399999999999]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.7242749E12, 15147.125], [1.72427484E12, 404.3556910569105]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7242749E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 73.0, "minX": 1.72427484E12, "maxY": 16314.0, "series": [{"data": [[1.7242749E12, 16314.0], [1.72427484E12, 15491.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7242749E12, 15732.300000000001], [1.72427484E12, 10763.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7242749E12, 16314.0], [1.72427484E12, 13994.350000000022]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7242749E12, 16314.0], [1.72427484E12, 11990.75]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.7242749E12, 130.0], [1.72427484E12, 73.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7242749E12, 8208.0], [1.72427484E12, 3700.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7242749E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 86.0, "minX": 2.0, "maxY": 14837.0, "series": [{"data": [[8.0, 8178.5], [133.0, 8987.0], [2.0, 10028.5], [47.0, 99.0], [190.0, 4954.5], [48.0, 88.0], [12.0, 7274.5], [51.0, 86.0], [52.0, 10962.0], [55.0, 86.0], [221.0, 9623.0], [57.0, 87.0], [14.0, 7716.0], [63.0, 457.0], [264.0, 2126.5], [103.0, 5174.0], [114.0, 5047.5], [7.0, 14837.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 264.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 86.0, "minX": 2.0, "maxY": 8178.5, "series": [{"data": [[8.0, 8178.5], [133.0, 1656.0], [2.0, 3867.5], [47.0, 99.0], [190.0, 1468.0], [48.0, 88.0], [12.0, 7250.0], [51.0, 86.0], [52.0, 2386.0], [55.0, 86.0], [221.0, 2956.0], [57.0, 87.0], [14.0, 7650.0], [63.0, 452.0], [264.0, 1471.0], [103.0, 961.0], [114.0, 828.5], [7.0, 7264.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 264.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 25.0, "minX": 1.72427484E12, "maxY": 25.0, "series": [{"data": [[1.72427484E12, 25.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72427484E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.72427484E12, "maxY": 16.4, "series": [{"data": [[1.7242749E12, 0.26666666666666666], [1.72427484E12, 16.4]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72427484E12, 8.333333333333334]], "isOverall": false, "label": "301", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.7242749E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.13333333333333333, "minX": 1.72427484E12, "maxY": 8.333333333333334, "series": [{"data": [[1.7242749E12, 0.13333333333333333], [1.72427484E12, 8.2]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.72427484E12, 8.333333333333334]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.7242749E12, 0.13333333333333333], [1.72427484E12, 8.2]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7242749E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.26666666666666666, "minX": 1.72427484E12, "maxY": 24.733333333333334, "series": [{"data": [[1.7242749E12, 0.26666666666666666], [1.72427484E12, 24.733333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.7242749E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

